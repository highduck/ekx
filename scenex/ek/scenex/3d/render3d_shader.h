#pragma once
/*
    #version:1# (machine generated, don't edit!)

    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)

    Overview:

        Shader program 'render3d':
            Get shader desc: render3d_shader_desc()
            Vertex shader: vs
                Attribute slots:
                    ATTR_vs_aPosition = 0
                    ATTR_vs_aNormal = 1
                    ATTR_vs_aTexCoord = 2
                    ATTR_vs_aColorMult = 3
                    ATTR_vs_aColorOffset = 4
                Uniform block 'vs_params':
                    C struct: vs_params_t
                    Bind slot: SLOT_vs_params = 0
            Fragment shader: fs
                Uniform block 'material_params':
                    C struct: material_params_t
                    Bind slot: SLOT_material_params = 0
                Uniform block 'fs_params':
                    C struct: fs_params_t
                    Bind slot: SLOT_fs_params = 1
                Uniform block 'light_params':
                    C struct: light_params_t
                    Bind slot: SLOT_light_params = 2
                Uniform block 'light2_params':
                    C struct: light2_params_t
                    Bind slot: SLOT_light2_params = 3
                Image 'u_image_shadow_map':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_u_image_shadow_map = 0
                Image 'uImage0':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_uImage0 = 1

        Shader program 'render3d_shadow_map':
            Get shader desc: render3d_shadow_map_shader_desc()
            Vertex shader: vs_shadow_map
                Attribute slots:
                    ATTR_vs_shadow_map_aPosition = 0
                    ATTR_vs_shadow_map_aNormal = 1
                    ATTR_vs_shadow_map_aTexCoord = 2
                    ATTR_vs_shadow_map_aColorMult = 3
                    ATTR_vs_shadow_map_aColorOffset = 4
                Uniform block 'vs_shadow_map_params':
                    C struct: vs_shadow_map_params_t
                    Bind slot: SLOT_vs_shadow_map_params = 0
            Fragment shader: fs_shadow_map

        Shader program 'render3d_skybox':
            Get shader desc: render3d_skybox_shader_desc()
            Vertex shader: vs_skybox
                Attribute slots:
                    ATTR_vs_skybox_aPosition = 0
                    ATTR_vs_skybox_aNormal = 1
                    ATTR_vs_skybox_aTexCoord = 2
                    ATTR_vs_skybox_aColorMult = 3
                    ATTR_vs_skybox_aColorOffset = 4
                Uniform block 'vs_skybox_params':
                    C struct: vs_skybox_params_t
                    Bind slot: SLOT_vs_skybox_params = 0
            Fragment shader: fs_skybox
                Image 'imageSkybox':
                    Type: SG_IMAGETYPE_CUBE
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_imageSkybox = 0


    Shader descriptor structs:

        sg_shader render3d = sg_make_shader(render3d_shader_desc());
        sg_shader render3d_shadow_map = sg_make_shader(render3d_shadow_map_shader_desc());
        sg_shader render3d_skybox = sg_make_shader(render3d_skybox_shader_desc());

    Vertex attribute locations for vertex shader 'vs_shadow_map':

        sg_pipeline pip = sg_make_pipeline(&(sg_pipeline_desc){
            .layout = {
                .attrs = {
                    [ATTR_vs_shadow_map_aPosition] = { ... },
                    [ATTR_vs_shadow_map_aNormal] = { ... },
                    [ATTR_vs_shadow_map_aTexCoord] = { ... },
                    [ATTR_vs_shadow_map_aColorMult] = { ... },
                    [ATTR_vs_shadow_map_aColorOffset] = { ... },
                },
            },
            ...});

    Vertex attribute locations for vertex shader 'vs':

        sg_pipeline pip = sg_make_pipeline(&(sg_pipeline_desc){
            .layout = {
                .attrs = {
                    [ATTR_vs_aPosition] = { ... },
                    [ATTR_vs_aNormal] = { ... },
                    [ATTR_vs_aTexCoord] = { ... },
                    [ATTR_vs_aColorMult] = { ... },
                    [ATTR_vs_aColorOffset] = { ... },
                },
            },
            ...});

    Vertex attribute locations for vertex shader 'vs_skybox':

        sg_pipeline pip = sg_make_pipeline(&(sg_pipeline_desc){
            .layout = {
                .attrs = {
                    [ATTR_vs_skybox_aPosition] = { ... },
                    [ATTR_vs_skybox_aNormal] = { ... },
                    [ATTR_vs_skybox_aTexCoord] = { ... },
                    [ATTR_vs_skybox_aColorMult] = { ... },
                    [ATTR_vs_skybox_aColorOffset] = { ... },
                },
            },
            ...});

    Image bind slots, use as index in sg_bindings.vs_images[] or .fs_images[]

        SLOT_u_image_shadow_map = 0;
        SLOT_uImage0 = 1;
        SLOT_imageSkybox = 0;

    Bind slot and C-struct for uniform block 'vs_shadow_map_params':

        vs_shadow_map_params_t vs_shadow_map_params = {
            .uModelViewProjection = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_vs_shadow_map_params, &vs_shadow_map_params, sizeof(vs_shadow_map_params));

    Bind slot and C-struct for uniform block 'vs_params':

        vs_params_t vs_params = {
            .uModelViewProjection = ...;
            .uModel = ...;
            .u_normal_matrix = ...;
            .u_depth_mvp = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_vs_params, &vs_params, sizeof(vs_params));

    Bind slot and C-struct for uniform block 'material_params':

        material_params_t material_params = {
            .mat_ambient = ...;
            .mat_diffuse = ...;
            .mat_specular = ...;
            .mat_emission = ...;
            .mat_shininess = ...;
            .mat_roughness = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_material_params, &material_params, sizeof(material_params));

    Bind slot and C-struct for uniform block 'fs_params':

        fs_params_t fs_params = {
            .u_time = ...;
            .u_resolution = ...;
            .uViewPos = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_fs_params, &fs_params, sizeof(fs_params));

    Bind slot and C-struct for uniform block 'light_params':

        light_params_t light_params = {
            .light_position = ...;
            .light_ambient = ...;
            .light_diffuse = ...;
            .light_specular = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_light_params, &light_params, sizeof(light_params));

    Bind slot and C-struct for uniform block 'light2_params':

        light2_params_t light2_params = {
            .light2_position = ...;
            .light2_radius = ...;
            .light2_ambient = ...;
            .light2_falloff = ...;
            .light2_diffuse = ...;
            .light2_specular = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_light2_params, &light2_params, sizeof(light2_params));

    Bind slot and C-struct for uniform block 'vs_skybox_params':

        vs_skybox_params_t vs_skybox_params = {
            .uModelViewProjection = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_vs_skybox_params, &vs_skybox_params, sizeof(vs_skybox_params));

*/
#include <stdint.h>
#include <stdbool.h>
#if !defined(SOKOL_SHDC_ALIGN)
  #if defined(_MSC_VER)
    #define SOKOL_SHDC_ALIGN(a) __declspec(align(a))
  #else
    #define SOKOL_SHDC_ALIGN(a) __attribute__((aligned(a)))
  #endif
#endif
#define ATTR_vs_shadow_map_aPosition (0)
#define ATTR_vs_shadow_map_aNormal (1)
#define ATTR_vs_shadow_map_aTexCoord (2)
#define ATTR_vs_shadow_map_aColorMult (3)
#define ATTR_vs_shadow_map_aColorOffset (4)
#define ATTR_vs_aPosition (0)
#define ATTR_vs_aNormal (1)
#define ATTR_vs_aTexCoord (2)
#define ATTR_vs_aColorMult (3)
#define ATTR_vs_aColorOffset (4)
#define ATTR_vs_skybox_aPosition (0)
#define ATTR_vs_skybox_aNormal (1)
#define ATTR_vs_skybox_aTexCoord (2)
#define ATTR_vs_skybox_aColorMult (3)
#define ATTR_vs_skybox_aColorOffset (4)
#define SLOT_u_image_shadow_map (0)
#define SLOT_uImage0 (1)
#define SLOT_imageSkybox (0)
#define SLOT_vs_shadow_map_params (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct vs_shadow_map_params_t {
    float uModelViewProjection[16];
} vs_shadow_map_params_t;
#pragma pack(pop)
#define SLOT_vs_params (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct vs_params_t {
    float uModelViewProjection[16];
    float uModel[16];
    float u_normal_matrix[16];
    float u_depth_mvp[16];
} vs_params_t;
#pragma pack(pop)
#define SLOT_material_params (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct material_params_t {
    float mat_ambient[3];
    uint8_t _pad_12[4];
    float mat_diffuse[3];
    uint8_t _pad_28[4];
    float mat_specular[3];
    uint8_t _pad_44[4];
    float mat_emission[3];
    float mat_shininess;
    float mat_roughness;
    uint8_t _pad_68[12];
} material_params_t;
#pragma pack(pop)
#define SLOT_fs_params (1)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct fs_params_t {
    float u_time[4];
    float u_resolution[4];
    float uViewPos[3];
    uint8_t _pad_44[4];
} fs_params_t;
#pragma pack(pop)
#define SLOT_light_params (2)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct light_params_t {
    float light_position[3];
    uint8_t _pad_12[4];
    float light_ambient[3];
    uint8_t _pad_28[4];
    float light_diffuse[3];
    uint8_t _pad_44[4];
    float light_specular[3];
    uint8_t _pad_60[4];
} light_params_t;
#pragma pack(pop)
#define SLOT_light2_params (3)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct light2_params_t {
    float light2_position[3];
    float light2_radius;
    float light2_ambient[3];
    float light2_falloff;
    float light2_diffuse[3];
    uint8_t _pad_44[4];
    float light2_specular[3];
    uint8_t _pad_60[4];
} light2_params_t;
#pragma pack(pop)
#define SLOT_vs_skybox_params (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct vs_skybox_params_t {
    float uModelViewProjection[16];
} vs_skybox_params_t;
#pragma pack(pop)
/*
    #version 330
    
    uniform vec4 vs_shadow_map_params[4];
    layout(location = 0) in vec3 aPosition;
    out vec2 projZW;
    layout(location = 1) in vec3 aNormal;
    layout(location = 2) in vec2 aTexCoord;
    layout(location = 3) in vec4 aColorMult;
    layout(location = 4) in vec4 aColorOffset;
    
    void main()
    {
        gl_Position = mat4(vs_shadow_map_params[0], vs_shadow_map_params[1], vs_shadow_map_params[2], vs_shadow_map_params[3]) * vec4(aPosition, 1.0);
        projZW = gl_Position.zw;
    }
    
*/
static const char vs_shadow_map_source_glsl330[466] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x73,0x5f,0x73,0x68,
    0x61,0x64,0x6f,0x77,0x5f,0x6d,0x61,0x70,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x34,0x5d,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,
    0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,
    0x20,0x61,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x6f,0x75,0x74,0x20,
    0x76,0x65,0x63,0x32,0x20,0x70,0x72,0x6f,0x6a,0x5a,0x57,0x3b,0x0a,0x6c,0x61,0x79,
    0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,
    0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x61,0x4e,0x6f,0x72,0x6d,0x61,
    0x6c,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,
    0x6f,0x6e,0x20,0x3d,0x20,0x32,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,
    0x61,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,
    0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x33,0x29,0x20,
    0x69,0x6e,0x20,0x76,0x65,0x63,0x34,0x20,0x61,0x43,0x6f,0x6c,0x6f,0x72,0x4d,0x75,
    0x6c,0x74,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,
    0x69,0x6f,0x6e,0x20,0x3d,0x20,0x34,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x34,
    0x20,0x61,0x43,0x6f,0x6c,0x6f,0x72,0x4f,0x66,0x66,0x73,0x65,0x74,0x3b,0x0a,0x0a,
    0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x6d,0x61,0x74,0x34,0x28,0x76,0x73,0x5f,0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,0x6d,
    0x61,0x70,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2c,0x20,0x76,0x73,
    0x5f,0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,0x6d,0x61,0x70,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x31,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x73,0x68,0x61,0x64,0x6f,0x77,
    0x5f,0x6d,0x61,0x70,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x2c,0x20,
    0x76,0x73,0x5f,0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,0x6d,0x61,0x70,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,
    0x61,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x70,0x72,0x6f,0x6a,0x5a,0x57,0x20,0x3d,0x20,0x67,0x6c,
    0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2e,0x7a,0x77,0x3b,0x0a,0x7d,0x0a,
    0x0a,0x00,
};
/*
    #version 330
    
    in vec2 projZW;
    layout(location = 0) out vec4 fragColor;
    
    vec4 encodeDepth(float v)
    {
        vec4 _24 = fract(vec4(1.0, 255.0, 65025.0, 16581375.0) * v);
        return _24 - (_24.yzww * vec4(0.0039215688593685626983642578125, 0.0039215688593685626983642578125, 0.0039215688593685626983642578125, 0.0));
    }
    
    void main()
    {
        float param = projZW.x / projZW.y;
        fragColor = encodeDepth(param);
    }
    
*/
static const char fs_shadow_map_source_glsl330[407] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x33,0x30,0x0a,0x0a,0x69,0x6e,
    0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x72,0x6f,0x6a,0x5a,0x57,0x3b,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x66,0x72,0x61,0x67,
    0x43,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x0a,0x76,0x65,0x63,0x34,0x20,0x65,0x6e,0x63,
    0x6f,0x64,0x65,0x44,0x65,0x70,0x74,0x68,0x28,0x66,0x6c,0x6f,0x61,0x74,0x20,0x76,
    0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x32,0x34,
    0x20,0x3d,0x20,0x66,0x72,0x61,0x63,0x74,0x28,0x76,0x65,0x63,0x34,0x28,0x31,0x2e,
    0x30,0x2c,0x20,0x32,0x35,0x35,0x2e,0x30,0x2c,0x20,0x36,0x35,0x30,0x32,0x35,0x2e,
    0x30,0x2c,0x20,0x31,0x36,0x35,0x38,0x31,0x33,0x37,0x35,0x2e,0x30,0x29,0x20,0x2a,
    0x20,0x76,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,
    0x5f,0x32,0x34,0x20,0x2d,0x20,0x28,0x5f,0x32,0x34,0x2e,0x79,0x7a,0x77,0x77,0x20,
    0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x30,0x2e,0x30,0x30,0x33,0x39,0x32,0x31,0x35,
    0x36,0x38,0x38,0x35,0x39,0x33,0x36,0x38,0x35,0x36,0x32,0x36,0x39,0x38,0x33,0x36,
    0x34,0x32,0x35,0x37,0x38,0x31,0x32,0x35,0x2c,0x20,0x30,0x2e,0x30,0x30,0x33,0x39,
    0x32,0x31,0x35,0x36,0x38,0x38,0x35,0x39,0x33,0x36,0x38,0x35,0x36,0x32,0x36,0x39,
    0x38,0x33,0x36,0x34,0x32,0x35,0x37,0x38,0x31,0x32,0x35,0x2c,0x20,0x30,0x2e,0x30,
    0x30,0x33,0x39,0x32,0x31,0x35,0x36,0x38,0x38,0x35,0x39,0x33,0x36,0x38,0x35,0x36,
    0x32,0x36,0x39,0x38,0x33,0x36,0x34,0x32,0x35,0x37,0x38,0x31,0x32,0x35,0x2c,0x20,
    0x30,0x2e,0x30,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,
    0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x70,0x72,0x6f,0x6a,0x5a,0x57,
    0x2e,0x78,0x20,0x2f,0x20,0x70,0x72,0x6f,0x6a,0x5a,0x57,0x2e,0x79,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x65,
    0x6e,0x63,0x6f,0x64,0x65,0x44,0x65,0x70,0x74,0x68,0x28,0x70,0x61,0x72,0x61,0x6d,
    0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 330
    
    uniform vec4 vs_params[16];
    out vec3 vNormal;
    layout(location = 0) in vec3 aPosition;
    out vec3 vFragPos;
    out vec2 vTexCoord;
    layout(location = 2) in vec2 aTexCoord;
    out vec4 vColorMult;
    layout(location = 3) in vec4 aColorMult;
    out vec4 vColorOffset;
    layout(location = 4) in vec4 aColorOffset;
    out vec4 v_shadow_pos;
    layout(location = 1) in vec3 aNormal;
    
    void main()
    {
        vec4 _28 = vec4(aPosition, 1.0);
        vNormal = vec3(normalize(mat4(vs_params[8], vs_params[9], vs_params[10], vs_params[11]) * _28).xyz);
        mat4 _38 = mat4(vs_params[4], vs_params[5], vs_params[6], vs_params[7]);
        vFragPos = mat3(_38[0].xyz, _38[1].xyz, _38[2].xyz) * aPosition;
        vTexCoord = aTexCoord;
        vColorMult = aColorMult;
        vColorOffset = aColorOffset;
        v_shadow_pos = mat4(vs_params[12], vs_params[13], vs_params[14], vs_params[15]) * _28;
        gl_Position = mat4(vs_params[0], vs_params[1], vs_params[2], vs_params[3]) * _28;
    }
    
*/
static const char vs_source_glsl330[941] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x31,0x36,0x5d,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,
    0x63,0x33,0x20,0x76,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x6c,0x61,0x79,0x6f,
    0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,
    0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x61,0x50,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x46,0x72,
    0x61,0x67,0x50,0x6f,0x73,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x32,0x20,
    0x76,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,
    0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x32,0x29,0x20,
    0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x61,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,
    0x64,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x43,0x6f,0x6c,
    0x6f,0x72,0x4d,0x75,0x6c,0x74,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,
    0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x33,0x29,0x20,0x69,0x6e,0x20,
    0x76,0x65,0x63,0x34,0x20,0x61,0x43,0x6f,0x6c,0x6f,0x72,0x4d,0x75,0x6c,0x74,0x3b,
    0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x43,0x6f,0x6c,0x6f,0x72,
    0x4f,0x66,0x66,0x73,0x65,0x74,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,
    0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x34,0x29,0x20,0x69,0x6e,0x20,
    0x76,0x65,0x63,0x34,0x20,0x61,0x43,0x6f,0x6c,0x6f,0x72,0x4f,0x66,0x66,0x73,0x65,
    0x74,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x5f,0x73,0x68,
    0x61,0x64,0x6f,0x77,0x5f,0x70,0x6f,0x73,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,
    0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,
    0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x61,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,
    0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x32,0x38,0x20,0x3d,0x20,0x76,0x65,
    0x63,0x34,0x28,0x61,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,0x2e,
    0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x20,
    0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,
    0x28,0x6d,0x61,0x74,0x34,0x28,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x38,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x39,0x5d,
    0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x30,0x5d,0x2c,
    0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x31,0x5d,0x29,0x20,
    0x2a,0x20,0x5f,0x32,0x38,0x29,0x2e,0x78,0x79,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x6d,0x61,0x74,0x34,0x20,0x5f,0x33,0x38,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,
    0x28,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x34,0x5d,0x2c,0x20,0x76,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x35,0x5d,0x2c,0x20,0x76,0x73,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x36,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x37,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x46,
    0x72,0x61,0x67,0x50,0x6f,0x73,0x20,0x3d,0x20,0x6d,0x61,0x74,0x33,0x28,0x5f,0x33,
    0x38,0x5b,0x30,0x5d,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x5f,0x33,0x38,0x5b,0x31,0x5d,
    0x2e,0x78,0x79,0x7a,0x2c,0x20,0x5f,0x33,0x38,0x5b,0x32,0x5d,0x2e,0x78,0x79,0x7a,
    0x29,0x20,0x2a,0x20,0x61,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x76,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x20,0x3d,0x20,0x61,
    0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x43,
    0x6f,0x6c,0x6f,0x72,0x4d,0x75,0x6c,0x74,0x20,0x3d,0x20,0x61,0x43,0x6f,0x6c,0x6f,
    0x72,0x4d,0x75,0x6c,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x43,0x6f,0x6c,0x6f,
    0x72,0x4f,0x66,0x66,0x73,0x65,0x74,0x20,0x3d,0x20,0x61,0x43,0x6f,0x6c,0x6f,0x72,
    0x4f,0x66,0x66,0x73,0x65,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x5f,0x73,0x68,
    0x61,0x64,0x6f,0x77,0x5f,0x70,0x6f,0x73,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,
    0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x32,0x5d,0x2c,0x20,0x76,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x33,0x5d,0x2c,0x20,0x76,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x34,0x5d,0x2c,0x20,0x76,0x73,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x35,0x5d,0x29,0x20,0x2a,0x20,0x5f,0x32,
    0x38,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x76,0x73,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x31,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x32,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,
    0x29,0x20,0x2a,0x20,0x5f,0x32,0x38,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 330
    
    uniform vec4 material_params[5];
    uniform vec4 fs_params[3];
    uniform vec4 light_params[4];
    uniform vec4 light2_params[4];
    uniform sampler2D u_image_shadow_map;
    uniform sampler2D uImage0;
    
    in vec4 v_shadow_pos;
    in vec3 vNormal;
    in vec3 vFragPos;
    in vec2 vTexCoord;
    in vec4 vColorMult;
    layout(location = 0) out vec4 frag_color;
    in vec4 vColorOffset;
    
    float oren_nayar_diffuse(vec3 light_direction, vec3 view_direction, vec3 surface_normal, float roughness, float albedo)
    {
        float _213 = dot(light_direction, surface_normal);
        float _217 = dot(surface_normal, view_direction);
        float _223 = dot(light_direction, view_direction) - (_213 * _217);
        float _234 = roughness * roughness;
        return ((albedo * max(0.0, _213)) * ((1.0 + (_234 * ((albedo / (_234 + 0.12999999523162841796875)) + (0.5 / (_234 + 0.3300000131130218505859375))))) + ((((0.449999988079071044921875 * _234) / (_234 + 0.0900000035762786865234375)) * _223) / mix(1.0, max(_213, _217), step(0.0, _223))))) * 0.3183098733425140380859375;
    }
    
    float lambert_diffuse(vec3 light_direction, vec3 normal)
    {
        return dot(normal, light_direction);
    }
    
    float decodeDepth(vec4 rgba)
    {
        return dot(rgba, vec4(1.0, 0.0039215688593685626983642578125, 1.5378700481960549950599670410156e-05, 6.0308629201699659461155533790588e-08));
    }
    
    float calc_shadow(float cos_theta)
    {
        vec3 _168 = v_shadow_pos.xyz / vec3(v_shadow_pos.w);
        vec4 param = texture(u_image_shadow_map, (_168.xy * 0.5) + vec2(0.5));
        return step(decodeDepth(param), _168.z - (0.5 * clamp(0.004999999888241291046142578125 * tan(acos(cos_theta)), 0.0, 0.00999999977648258209228515625)));
    }
    
    float calc_spec(vec3 light_dir, vec3 view_dir, vec3 normal)
    {
        return ((8.0 + material_params[3].w) * 0.0397887341678142547607421875) * pow(max(dot(normal, normalize(light_dir + view_dir)), 0.0), material_params[3].w);
    }
    
    float attenuation_point(vec3 distance_by_radius, float falloff)
    {
        return pow(1.0 - min(1.0, length(distance_by_radius)), 2.0 * falloff);
    }
    
    float luminance(vec3 linear)
    {
        return dot(linear, vec3(0.2125999927520751953125, 0.715200006961822509765625, 0.072200000286102294921875));
    }
    
    vec3 linear_to_gamma(vec3 x)
    {
        return pow(x, vec3(0.4545454680919647216796875));
    }
    
    vec3 tonemap_reinhard(vec3 x)
    {
        vec3 param = x;
        vec3 param_1 = x / vec3(1.0 + luminance(param));
        return linear_to_gamma(param_1);
    }
    
    void main()
    {
        vec3 _282 = normalize(vNormal);
        vec3 _294 = normalize(fs_params[2].xyz - vFragPos);
        vec3 total = material_params[3].xyz;
        vec4 _305 = texture(uImage0, vTexCoord);
        vec4 _308 = _305 * vColorMult;
        vec3 _318 = vec3(_308.xyz) * material_params[1].xyz;
        vec3 param = light_params[0].xyz;
        vec3 param_1 = _294;
        vec3 param_2 = _282;
        float param_3 = 0.5;
        float param_4 = 1.0;
        float _333 = oren_nayar_diffuse(param, param_1, param_2, param_3, param_4);
        total += (material_params[0].xyz * light_params[1].xyz);
        if (_333 > 0.0)
        {
            vec3 param_5 = light_params[0].xyz;
            vec3 param_6 = _282;
            vec3 param_7 = light_params[0].xyz;
            vec3 param_8 = _294;
            vec3 param_9 = _282;
            total += ((((material_params[2].xyz * light_params[3].xyz) * calc_spec(param_7, param_8, param_9)) + ((_318 * light_params[2].xyz) * _333)) * (1.0 - calc_shadow(clamp(lambert_diffuse(param_5, param_6), 0.0, 1.0))));
        }
        vec3 _385 = light2_params[0].xyz - vFragPos;
        vec3 _393 = _385 / vec3(length(_385));
        vec3 param_10 = _393;
        vec3 param_11 = _294;
        vec3 param_12 = _282;
        float param_13 = 0.5;
        float param_14 = 1.0;
        float _403 = oren_nayar_diffuse(param_10, param_11, param_12, param_13, param_14);
        total += (material_params[0].xyz * light2_params[1].xyz);
        if (_403 > 0.0)
        {
            vec3 param_15 = _385 / vec3(light2_params[0].w);
            float param_16 = light2_params[1].w;
            float _425 = attenuation_point(param_15, param_16);
            if (_425 > 0.0)
            {
                vec3 param_17 = _393;
                vec3 param_18 = _294;
                vec3 param_19 = _282;
                total += ((((material_params[2].xyz * light2_params[3].xyz) * calc_spec(param_17, param_18, param_19)) + ((_318 * light2_params[2].xyz) * _403)) * _425);
            }
        }
        vec3 _456 = tonemap_reinhard(total);
        total = _456;
        frag_color = vec4(_456, _308.w);
    }
    
*/
static const char fs_source_glsl330[4358] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x6d,0x61,0x74,0x65,0x72,
    0x69,0x61,0x6c,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x35,0x5d,0x3b,0x0a,0x75,
    0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x66,0x73,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,
    0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x5b,0x34,0x5d,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,
    0x76,0x65,0x63,0x34,0x20,0x6c,0x69,0x67,0x68,0x74,0x32,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x34,0x5d,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x73,
    0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x75,0x5f,0x69,0x6d,0x61,0x67,0x65,
    0x5f,0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,0x6d,0x61,0x70,0x3b,0x0a,0x75,0x6e,0x69,
    0x66,0x6f,0x72,0x6d,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x75,
    0x49,0x6d,0x61,0x67,0x65,0x30,0x3b,0x0a,0x0a,0x69,0x6e,0x20,0x76,0x65,0x63,0x34,
    0x20,0x76,0x5f,0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,0x70,0x6f,0x73,0x3b,0x0a,0x69,
    0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,
    0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x46,0x72,0x61,0x67,0x50,0x6f,0x73,
    0x3b,0x0a,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x76,0x54,0x65,0x78,0x43,0x6f,
    0x6f,0x72,0x64,0x3b,0x0a,0x69,0x6e,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x43,0x6f,
    0x6c,0x6f,0x72,0x4d,0x75,0x6c,0x74,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,
    0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,
    0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,
    0x72,0x3b,0x0a,0x69,0x6e,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x43,0x6f,0x6c,0x6f,
    0x72,0x4f,0x66,0x66,0x73,0x65,0x74,0x3b,0x0a,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x6f,0x72,0x65,0x6e,0x5f,0x6e,0x61,0x79,0x61,0x72,0x5f,0x64,0x69,0x66,0x66,0x75,
    0x73,0x65,0x28,0x76,0x65,0x63,0x33,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,
    0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x69,
    0x65,0x77,0x5f,0x64,0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x76,0x65,
    0x63,0x33,0x20,0x73,0x75,0x72,0x66,0x61,0x63,0x65,0x5f,0x6e,0x6f,0x72,0x6d,0x61,
    0x6c,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,
    0x73,0x73,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x61,0x6c,0x62,0x65,0x64,0x6f,
    0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,
    0x31,0x33,0x20,0x3d,0x20,0x64,0x6f,0x74,0x28,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,
    0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x73,0x75,0x72,0x66,0x61,0x63,
    0x65,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x31,0x37,0x20,0x3d,0x20,0x64,0x6f,0x74,0x28,
    0x73,0x75,0x72,0x66,0x61,0x63,0x65,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,
    0x76,0x69,0x65,0x77,0x5f,0x64,0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x32,0x33,0x20,
    0x3d,0x20,0x64,0x6f,0x74,0x28,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x65,
    0x63,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x76,0x69,0x65,0x77,0x5f,0x64,0x69,0x72,0x65,
    0x63,0x74,0x69,0x6f,0x6e,0x29,0x20,0x2d,0x20,0x28,0x5f,0x32,0x31,0x33,0x20,0x2a,
    0x20,0x5f,0x32,0x31,0x37,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x5f,0x32,0x33,0x34,0x20,0x3d,0x20,0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,
    0x73,0x73,0x20,0x2a,0x20,0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x28,0x28,0x61,0x6c,0x62,
    0x65,0x64,0x6f,0x20,0x2a,0x20,0x6d,0x61,0x78,0x28,0x30,0x2e,0x30,0x2c,0x20,0x5f,
    0x32,0x31,0x33,0x29,0x29,0x20,0x2a,0x20,0x28,0x28,0x31,0x2e,0x30,0x20,0x2b,0x20,
    0x28,0x5f,0x32,0x33,0x34,0x20,0x2a,0x20,0x28,0x28,0x61,0x6c,0x62,0x65,0x64,0x6f,
    0x20,0x2f,0x20,0x28,0x5f,0x32,0x33,0x34,0x20,0x2b,0x20,0x30,0x2e,0x31,0x32,0x39,
    0x39,0x39,0x39,0x39,0x39,0x35,0x32,0x33,0x31,0x36,0x32,0x38,0x34,0x31,0x37,0x39,
    0x36,0x38,0x37,0x35,0x29,0x29,0x20,0x2b,0x20,0x28,0x30,0x2e,0x35,0x20,0x2f,0x20,
    0x28,0x5f,0x32,0x33,0x34,0x20,0x2b,0x20,0x30,0x2e,0x33,0x33,0x30,0x30,0x30,0x30,
    0x30,0x31,0x33,0x31,0x31,0x33,0x30,0x32,0x31,0x38,0x35,0x30,0x35,0x38,0x35,0x39,
    0x33,0x37,0x35,0x29,0x29,0x29,0x29,0x29,0x20,0x2b,0x20,0x28,0x28,0x28,0x28,0x30,
    0x2e,0x34,0x34,0x39,0x39,0x39,0x39,0x39,0x38,0x38,0x30,0x37,0x39,0x30,0x37,0x31,
    0x30,0x34,0x34,0x39,0x32,0x31,0x38,0x37,0x35,0x20,0x2a,0x20,0x5f,0x32,0x33,0x34,
    0x29,0x20,0x2f,0x20,0x28,0x5f,0x32,0x33,0x34,0x20,0x2b,0x20,0x30,0x2e,0x30,0x39,
    0x30,0x30,0x30,0x30,0x30,0x30,0x33,0x35,0x37,0x36,0x32,0x37,0x38,0x36,0x38,0x36,
    0x35,0x32,0x33,0x34,0x33,0x37,0x35,0x29,0x29,0x20,0x2a,0x20,0x5f,0x32,0x32,0x33,
    0x29,0x20,0x2f,0x20,0x6d,0x69,0x78,0x28,0x31,0x2e,0x30,0x2c,0x20,0x6d,0x61,0x78,
    0x28,0x5f,0x32,0x31,0x33,0x2c,0x20,0x5f,0x32,0x31,0x37,0x29,0x2c,0x20,0x73,0x74,
    0x65,0x70,0x28,0x30,0x2e,0x30,0x2c,0x20,0x5f,0x32,0x32,0x33,0x29,0x29,0x29,0x29,
    0x29,0x20,0x2a,0x20,0x30,0x2e,0x33,0x31,0x38,0x33,0x30,0x39,0x38,0x37,0x33,0x33,
    0x34,0x32,0x35,0x31,0x34,0x30,0x33,0x38,0x30,0x38,0x35,0x39,0x33,0x37,0x35,0x3b,
    0x0a,0x7d,0x0a,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x20,0x6c,0x61,0x6d,0x62,0x65,0x72,
    0x74,0x5f,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x28,0x76,0x65,0x63,0x33,0x20,0x6c,
    0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x2c,0x20,
    0x76,0x65,0x63,0x33,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x29,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x64,0x6f,0x74,0x28,0x6e,0x6f,
    0x72,0x6d,0x61,0x6c,0x2c,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x65,
    0x63,0x74,0x69,0x6f,0x6e,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x64,0x65,0x63,0x6f,0x64,0x65,0x44,0x65,0x70,0x74,0x68,0x28,0x76,0x65,0x63,
    0x34,0x20,0x72,0x67,0x62,0x61,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,
    0x74,0x75,0x72,0x6e,0x20,0x64,0x6f,0x74,0x28,0x72,0x67,0x62,0x61,0x2c,0x20,0x76,
    0x65,0x63,0x34,0x28,0x31,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x30,0x33,0x39,0x32,
    0x31,0x35,0x36,0x38,0x38,0x35,0x39,0x33,0x36,0x38,0x35,0x36,0x32,0x36,0x39,0x38,
    0x33,0x36,0x34,0x32,0x35,0x37,0x38,0x31,0x32,0x35,0x2c,0x20,0x31,0x2e,0x35,0x33,
    0x37,0x38,0x37,0x30,0x30,0x34,0x38,0x31,0x39,0x36,0x30,0x35,0x34,0x39,0x39,0x35,
    0x30,0x35,0x39,0x39,0x36,0x37,0x30,0x34,0x31,0x30,0x31,0x35,0x36,0x65,0x2d,0x30,
    0x35,0x2c,0x20,0x36,0x2e,0x30,0x33,0x30,0x38,0x36,0x32,0x39,0x32,0x30,0x31,0x36,
    0x39,0x39,0x36,0x35,0x39,0x34,0x36,0x31,0x31,0x35,0x35,0x35,0x33,0x33,0x37,0x39,
    0x30,0x35,0x38,0x38,0x65,0x2d,0x30,0x38,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x63,0x61,0x6c,0x63,0x5f,0x73,0x68,0x61,0x64,0x6f,0x77,
    0x28,0x66,0x6c,0x6f,0x61,0x74,0x20,0x63,0x6f,0x73,0x5f,0x74,0x68,0x65,0x74,0x61,
    0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x31,0x36,
    0x38,0x20,0x3d,0x20,0x76,0x5f,0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,0x70,0x6f,0x73,
    0x2e,0x78,0x79,0x7a,0x20,0x2f,0x20,0x76,0x65,0x63,0x33,0x28,0x76,0x5f,0x73,0x68,
    0x61,0x64,0x6f,0x77,0x5f,0x70,0x6f,0x73,0x2e,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x76,0x65,0x63,0x34,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x74,0x65,
    0x78,0x74,0x75,0x72,0x65,0x28,0x75,0x5f,0x69,0x6d,0x61,0x67,0x65,0x5f,0x73,0x68,
    0x61,0x64,0x6f,0x77,0x5f,0x6d,0x61,0x70,0x2c,0x20,0x28,0x5f,0x31,0x36,0x38,0x2e,
    0x78,0x79,0x20,0x2a,0x20,0x30,0x2e,0x35,0x29,0x20,0x2b,0x20,0x76,0x65,0x63,0x32,
    0x28,0x30,0x2e,0x35,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,
    0x72,0x6e,0x20,0x73,0x74,0x65,0x70,0x28,0x64,0x65,0x63,0x6f,0x64,0x65,0x44,0x65,
    0x70,0x74,0x68,0x28,0x70,0x61,0x72,0x61,0x6d,0x29,0x2c,0x20,0x5f,0x31,0x36,0x38,
    0x2e,0x7a,0x20,0x2d,0x20,0x28,0x30,0x2e,0x35,0x20,0x2a,0x20,0x63,0x6c,0x61,0x6d,
    0x70,0x28,0x30,0x2e,0x30,0x30,0x34,0x39,0x39,0x39,0x39,0x39,0x39,0x38,0x38,0x38,
    0x32,0x34,0x31,0x32,0x39,0x31,0x30,0x34,0x36,0x31,0x34,0x32,0x35,0x37,0x38,0x31,
    0x32,0x35,0x20,0x2a,0x20,0x74,0x61,0x6e,0x28,0x61,0x63,0x6f,0x73,0x28,0x63,0x6f,
    0x73,0x5f,0x74,0x68,0x65,0x74,0x61,0x29,0x29,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,
    0x30,0x2e,0x30,0x30,0x39,0x39,0x39,0x39,0x39,0x39,0x39,0x37,0x37,0x36,0x34,0x38,
    0x32,0x35,0x38,0x32,0x30,0x39,0x32,0x32,0x38,0x35,0x31,0x35,0x36,0x32,0x35,0x29,
    0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x20,0x63,0x61,0x6c,
    0x63,0x5f,0x73,0x70,0x65,0x63,0x28,0x76,0x65,0x63,0x33,0x20,0x6c,0x69,0x67,0x68,
    0x74,0x5f,0x64,0x69,0x72,0x2c,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x69,0x65,0x77,
    0x5f,0x64,0x69,0x72,0x2c,0x20,0x76,0x65,0x63,0x33,0x20,0x6e,0x6f,0x72,0x6d,0x61,
    0x6c,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,
    0x28,0x28,0x38,0x2e,0x30,0x20,0x2b,0x20,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,0x2e,0x77,0x29,0x20,0x2a,0x20,
    0x30,0x2e,0x30,0x33,0x39,0x37,0x38,0x38,0x37,0x33,0x34,0x31,0x36,0x37,0x38,0x31,
    0x34,0x32,0x35,0x34,0x37,0x36,0x30,0x37,0x34,0x32,0x31,0x38,0x37,0x35,0x29,0x20,
    0x2a,0x20,0x70,0x6f,0x77,0x28,0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,0x28,0x6e,0x6f,
    0x72,0x6d,0x61,0x6c,0x2c,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,
    0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x20,0x2b,0x20,0x76,0x69,0x65,0x77,
    0x5f,0x64,0x69,0x72,0x29,0x29,0x2c,0x20,0x30,0x2e,0x30,0x29,0x2c,0x20,0x6d,0x61,
    0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,
    0x2e,0x77,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x20,0x61,0x74,
    0x74,0x65,0x6e,0x75,0x61,0x74,0x69,0x6f,0x6e,0x5f,0x70,0x6f,0x69,0x6e,0x74,0x28,
    0x76,0x65,0x63,0x33,0x20,0x64,0x69,0x73,0x74,0x61,0x6e,0x63,0x65,0x5f,0x62,0x79,
    0x5f,0x72,0x61,0x64,0x69,0x75,0x73,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x66,
    0x61,0x6c,0x6c,0x6f,0x66,0x66,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,
    0x74,0x75,0x72,0x6e,0x20,0x70,0x6f,0x77,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x6d,
    0x69,0x6e,0x28,0x31,0x2e,0x30,0x2c,0x20,0x6c,0x65,0x6e,0x67,0x74,0x68,0x28,0x64,
    0x69,0x73,0x74,0x61,0x6e,0x63,0x65,0x5f,0x62,0x79,0x5f,0x72,0x61,0x64,0x69,0x75,
    0x73,0x29,0x29,0x2c,0x20,0x32,0x2e,0x30,0x20,0x2a,0x20,0x66,0x61,0x6c,0x6c,0x6f,
    0x66,0x66,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x20,0x6c,0x75,
    0x6d,0x69,0x6e,0x61,0x6e,0x63,0x65,0x28,0x76,0x65,0x63,0x33,0x20,0x6c,0x69,0x6e,
    0x65,0x61,0x72,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,
    0x6e,0x20,0x64,0x6f,0x74,0x28,0x6c,0x69,0x6e,0x65,0x61,0x72,0x2c,0x20,0x76,0x65,
    0x63,0x33,0x28,0x30,0x2e,0x32,0x31,0x32,0x35,0x39,0x39,0x39,0x39,0x32,0x37,0x35,
    0x32,0x30,0x37,0x35,0x31,0x39,0x35,0x33,0x31,0x32,0x35,0x2c,0x20,0x30,0x2e,0x37,
    0x31,0x35,0x32,0x30,0x30,0x30,0x30,0x36,0x39,0x36,0x31,0x38,0x32,0x32,0x35,0x30,
    0x39,0x37,0x36,0x35,0x36,0x32,0x35,0x2c,0x20,0x30,0x2e,0x30,0x37,0x32,0x32,0x30,
    0x30,0x30,0x30,0x30,0x32,0x38,0x36,0x31,0x30,0x32,0x32,0x39,0x34,0x39,0x32,0x31,
    0x38,0x37,0x35,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x65,0x63,0x33,0x20,0x6c,
    0x69,0x6e,0x65,0x61,0x72,0x5f,0x74,0x6f,0x5f,0x67,0x61,0x6d,0x6d,0x61,0x28,0x76,
    0x65,0x63,0x33,0x20,0x78,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,
    0x75,0x72,0x6e,0x20,0x70,0x6f,0x77,0x28,0x78,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,
    0x30,0x2e,0x34,0x35,0x34,0x35,0x34,0x35,0x34,0x36,0x38,0x30,0x39,0x31,0x39,0x36,
    0x34,0x37,0x32,0x31,0x36,0x37,0x39,0x36,0x38,0x37,0x35,0x29,0x29,0x3b,0x0a,0x7d,
    0x0a,0x0a,0x76,0x65,0x63,0x33,0x20,0x74,0x6f,0x6e,0x65,0x6d,0x61,0x70,0x5f,0x72,
    0x65,0x69,0x6e,0x68,0x61,0x72,0x64,0x28,0x76,0x65,0x63,0x33,0x20,0x78,0x29,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x20,0x3d,0x20,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x78,0x20,0x2f,0x20,0x76,0x65,0x63,
    0x33,0x28,0x31,0x2e,0x30,0x20,0x2b,0x20,0x6c,0x75,0x6d,0x69,0x6e,0x61,0x6e,0x63,
    0x65,0x28,0x70,0x61,0x72,0x61,0x6d,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,
    0x65,0x74,0x75,0x72,0x6e,0x20,0x6c,0x69,0x6e,0x65,0x61,0x72,0x5f,0x74,0x6f,0x5f,
    0x67,0x61,0x6d,0x6d,0x61,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x29,0x3b,0x0a,
    0x7d,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x32,0x38,0x32,0x20,0x3d,
    0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x76,0x4e,0x6f,0x72,0x6d,
    0x61,0x6c,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x32,
    0x39,0x34,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x66,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x2e,0x78,0x79,0x7a,0x20,
    0x2d,0x20,0x76,0x46,0x72,0x61,0x67,0x50,0x6f,0x73,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x76,0x65,0x63,0x33,0x20,0x74,0x6f,0x74,0x61,0x6c,0x20,0x3d,0x20,0x6d,0x61,
    0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,
    0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,
    0x33,0x30,0x35,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x75,0x49,
    0x6d,0x61,0x67,0x65,0x30,0x2c,0x20,0x76,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x33,0x30,0x38,
    0x20,0x3d,0x20,0x5f,0x33,0x30,0x35,0x20,0x2a,0x20,0x76,0x43,0x6f,0x6c,0x6f,0x72,
    0x4d,0x75,0x6c,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,
    0x33,0x31,0x38,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x5f,0x33,0x30,0x38,0x2e,
    0x78,0x79,0x7a,0x29,0x20,0x2a,0x20,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,
    0x6c,0x69,0x67,0x68,0x74,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,
    0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x5f,0x32,0x39,0x34,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,
    0x20,0x5f,0x32,0x38,0x32,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x30,0x2e,0x35,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x34,0x20,0x3d,0x20,0x31,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x5f,0x33,0x33,0x33,0x20,0x3d,0x20,0x6f,0x72,0x65,0x6e,0x5f,0x6e,
    0x61,0x79,0x61,0x72,0x5f,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x28,0x70,0x61,0x72,
    0x61,0x6d,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x2c,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x32,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x2c,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x34,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x74,0x6f,0x74,
    0x61,0x6c,0x20,0x2b,0x3d,0x20,0x28,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x78,0x79,0x7a,0x20,0x2a,0x20,
    0x6c,0x69,0x67,0x68,0x74,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x2e,
    0x78,0x79,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x33,
    0x33,0x33,0x20,0x3e,0x20,0x30,0x2e,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x35,0x20,0x3d,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x36,
    0x20,0x3d,0x20,0x5f,0x32,0x38,0x32,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x37,0x20,0x3d,0x20,
    0x6c,0x69,0x67,0x68,0x74,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,
    0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,
    0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x38,0x20,0x3d,0x20,0x5f,0x32,0x39,0x34,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x39,0x20,0x3d,0x20,0x5f,0x32,0x38,0x32,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x74,0x6f,0x74,0x61,0x6c,0x20,0x2b,0x3d,0x20,
    0x28,0x28,0x28,0x28,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x5b,0x32,0x5d,0x2e,0x78,0x79,0x7a,0x20,0x2a,0x20,0x6c,0x69,0x67,
    0x68,0x74,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,0x2e,0x78,0x79,0x7a,
    0x29,0x20,0x2a,0x20,0x63,0x61,0x6c,0x63,0x5f,0x73,0x70,0x65,0x63,0x28,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x37,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x38,0x2c,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x39,0x29,0x29,0x20,0x2b,0x20,0x28,0x28,0x5f,0x33,
    0x31,0x38,0x20,0x2a,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x32,0x5d,0x2e,0x78,0x79,0x7a,0x29,0x20,0x2a,0x20,0x5f,0x33,0x33,0x33,
    0x29,0x29,0x20,0x2a,0x20,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x63,0x61,0x6c,0x63,
    0x5f,0x73,0x68,0x61,0x64,0x6f,0x77,0x28,0x63,0x6c,0x61,0x6d,0x70,0x28,0x6c,0x61,
    0x6d,0x62,0x65,0x72,0x74,0x5f,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x28,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x35,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x36,0x29,0x2c,
    0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x29,0x29,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x33,
    0x38,0x35,0x20,0x3d,0x20,0x6c,0x69,0x67,0x68,0x74,0x32,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x78,0x79,0x7a,0x20,0x2d,0x20,0x76,0x46,0x72,0x61,
    0x67,0x50,0x6f,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,
    0x33,0x39,0x33,0x20,0x3d,0x20,0x5f,0x33,0x38,0x35,0x20,0x2f,0x20,0x76,0x65,0x63,
    0x33,0x28,0x6c,0x65,0x6e,0x67,0x74,0x68,0x28,0x5f,0x33,0x38,0x35,0x29,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x31,0x30,0x20,0x3d,0x20,0x5f,0x33,0x39,0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,
    0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x31,0x20,0x3d,0x20,0x5f,
    0x32,0x39,0x34,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x31,0x32,0x20,0x3d,0x20,0x5f,0x32,0x38,0x32,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,
    0x33,0x20,0x3d,0x20,0x30,0x2e,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x34,0x20,0x3d,0x20,0x31,0x2e,
    0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x34,0x30,
    0x33,0x20,0x3d,0x20,0x6f,0x72,0x65,0x6e,0x5f,0x6e,0x61,0x79,0x61,0x72,0x5f,0x64,
    0x69,0x66,0x66,0x75,0x73,0x65,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x30,0x2c,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x31,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x31,0x32,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x33,0x2c,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x31,0x34,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x74,0x6f,
    0x74,0x61,0x6c,0x20,0x2b,0x3d,0x20,0x28,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x78,0x79,0x7a,0x20,0x2a,
    0x20,0x6c,0x69,0x67,0x68,0x74,0x32,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,
    0x5d,0x2e,0x78,0x79,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,
    0x5f,0x34,0x30,0x33,0x20,0x3e,0x20,0x30,0x2e,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x31,0x35,0x20,0x3d,0x20,0x5f,0x33,0x38,0x35,0x20,0x2f,
    0x20,0x76,0x65,0x63,0x33,0x28,0x6c,0x69,0x67,0x68,0x74,0x32,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,
    0x36,0x20,0x3d,0x20,0x6c,0x69,0x67,0x68,0x74,0x32,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x31,0x5d,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x34,0x32,0x35,0x20,0x3d,0x20,0x61,0x74,0x74,
    0x65,0x6e,0x75,0x61,0x74,0x69,0x6f,0x6e,0x5f,0x70,0x6f,0x69,0x6e,0x74,0x28,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x31,0x35,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,
    0x36,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,
    0x5f,0x34,0x32,0x35,0x20,0x3e,0x20,0x30,0x2e,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x37,0x20,
    0x3d,0x20,0x5f,0x33,0x39,0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,
    0x38,0x20,0x3d,0x20,0x5f,0x32,0x39,0x34,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x31,0x39,0x20,0x3d,0x20,0x5f,0x32,0x38,0x32,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x74,0x6f,0x74,0x61,0x6c,0x20,0x2b,0x3d,
    0x20,0x28,0x28,0x28,0x28,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x2e,0x78,0x79,0x7a,0x20,0x2a,0x20,0x6c,0x69,
    0x67,0x68,0x74,0x32,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,0x2e,0x78,
    0x79,0x7a,0x29,0x20,0x2a,0x20,0x63,0x61,0x6c,0x63,0x5f,0x73,0x70,0x65,0x63,0x28,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x37,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x31,0x38,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x39,0x29,0x29,0x20,0x2b,
    0x20,0x28,0x28,0x5f,0x33,0x31,0x38,0x20,0x2a,0x20,0x6c,0x69,0x67,0x68,0x74,0x32,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x2e,0x78,0x79,0x7a,0x29,0x20,
    0x2a,0x20,0x5f,0x34,0x30,0x33,0x29,0x29,0x20,0x2a,0x20,0x5f,0x34,0x32,0x35,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,
    0x7d,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x34,0x35,0x36,0x20,
    0x3d,0x20,0x74,0x6f,0x6e,0x65,0x6d,0x61,0x70,0x5f,0x72,0x65,0x69,0x6e,0x68,0x61,
    0x72,0x64,0x28,0x74,0x6f,0x74,0x61,0x6c,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x74,
    0x6f,0x74,0x61,0x6c,0x20,0x3d,0x20,0x5f,0x34,0x35,0x36,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,
    0x63,0x34,0x28,0x5f,0x34,0x35,0x36,0x2c,0x20,0x5f,0x33,0x30,0x38,0x2e,0x77,0x29,
    0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 330
    
    uniform vec4 vs_skybox_params[4];
    out vec3 vTexCoord;
    layout(location = 0) in vec3 aPosition;
    layout(location = 1) in vec3 aNormal;
    layout(location = 2) in vec2 aTexCoord;
    layout(location = 3) in vec4 aColorMult;
    layout(location = 4) in vec4 aColorOffset;
    
    void main()
    {
        vTexCoord = aPosition.xzy;
        gl_Position = (mat4(vs_skybox_params[0], vs_skybox_params[1], vs_skybox_params[2], vs_skybox_params[3]) * vec4(aPosition, 1.0)).xyww;
    }
    
*/
static const char vs_skybox_source_glsl330[458] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x73,0x5f,0x73,0x6b,
    0x79,0x62,0x6f,0x78,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x34,0x5d,0x3b,0x0a,
    0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x54,0x65,0x78,0x43,0x6f,0x6f,
    0x72,0x64,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,
    0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,
    0x20,0x61,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x6c,0x61,0x79,0x6f,
    0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,
    0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x61,0x4e,0x6f,0x72,0x6d,0x61,0x6c,
    0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,
    0x6e,0x20,0x3d,0x20,0x32,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x61,
    0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,
    0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x33,0x29,0x20,0x69,
    0x6e,0x20,0x76,0x65,0x63,0x34,0x20,0x61,0x43,0x6f,0x6c,0x6f,0x72,0x4d,0x75,0x6c,
    0x74,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,
    0x6f,0x6e,0x20,0x3d,0x20,0x34,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x34,0x20,
    0x61,0x43,0x6f,0x6c,0x6f,0x72,0x4f,0x66,0x66,0x73,0x65,0x74,0x3b,0x0a,0x0a,0x76,
    0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x76,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x20,0x3d,0x20,0x61,0x50,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x2e,0x78,0x7a,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x28,0x6d,
    0x61,0x74,0x34,0x28,0x76,0x73,0x5f,0x73,0x6b,0x79,0x62,0x6f,0x78,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x73,0x6b,0x79,0x62,
    0x6f,0x78,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x2c,0x20,0x76,0x73,
    0x5f,0x73,0x6b,0x79,0x62,0x6f,0x78,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,
    0x5d,0x2c,0x20,0x76,0x73,0x5f,0x73,0x6b,0x79,0x62,0x6f,0x78,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x5b,0x33,0x5d,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x61,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,0x2e,0x30,0x29,0x29,0x2e,
    0x78,0x79,0x77,0x77,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 330
    
    uniform samplerCube imageSkybox;
    
    layout(location = 0) out vec4 fragColor;
    in vec3 vTexCoord;
    
    void main()
    {
        fragColor = texture(imageSkybox, vTexCoord);
    }
    
*/
static const char fs_skybox_source_glsl330[176] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x43,0x75,0x62,
    0x65,0x20,0x69,0x6d,0x61,0x67,0x65,0x53,0x6b,0x79,0x62,0x6f,0x78,0x3b,0x0a,0x0a,
    0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x66,0x72,
    0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,
    0x20,0x76,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x0a,0x76,0x6f,0x69,
    0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,
    0x72,0x65,0x28,0x69,0x6d,0x61,0x67,0x65,0x53,0x6b,0x79,0x62,0x6f,0x78,0x2c,0x20,
    0x76,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,

};
/*
    #version 100
    
    uniform vec4 vs_shadow_map_params[4];
    attribute vec3 aPosition;
    varying vec2 projZW;
    attribute vec3 aNormal;
    attribute vec2 aTexCoord;
    attribute vec4 aColorMult;
    attribute vec4 aColorOffset;
    
    void main()
    {
        gl_Position = mat4(vs_shadow_map_params[0], vs_shadow_map_params[1], vs_shadow_map_params[2], vs_shadow_map_params[3]) * vec4(aPosition, 1.0);
        projZW = gl_Position.zw;
    }
    
*/
static const char vs_shadow_map_source_glsl100[400] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x31,0x30,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x73,0x5f,0x73,0x68,
    0x61,0x64,0x6f,0x77,0x5f,0x6d,0x61,0x70,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x34,0x5d,0x3b,0x0a,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x20,0x76,0x65,
    0x63,0x33,0x20,0x61,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x76,0x61,
    0x72,0x79,0x69,0x6e,0x67,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x72,0x6f,0x6a,0x5a,
    0x57,0x3b,0x0a,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x20,0x76,0x65,0x63,
    0x33,0x20,0x61,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x61,0x74,0x74,0x72,0x69,
    0x62,0x75,0x74,0x65,0x20,0x76,0x65,0x63,0x32,0x20,0x61,0x54,0x65,0x78,0x43,0x6f,
    0x6f,0x72,0x64,0x3b,0x0a,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x20,0x76,
    0x65,0x63,0x34,0x20,0x61,0x43,0x6f,0x6c,0x6f,0x72,0x4d,0x75,0x6c,0x74,0x3b,0x0a,
    0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x20,0x76,0x65,0x63,0x34,0x20,0x61,
    0x43,0x6f,0x6c,0x6f,0x72,0x4f,0x66,0x66,0x73,0x65,0x74,0x3b,0x0a,0x0a,0x76,0x6f,
    0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x6d,0x61,
    0x74,0x34,0x28,0x76,0x73,0x5f,0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,0x6d,0x61,0x70,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x73,
    0x68,0x61,0x64,0x6f,0x77,0x5f,0x6d,0x61,0x70,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x5b,0x31,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,0x6d,
    0x61,0x70,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x2c,0x20,0x76,0x73,
    0x5f,0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,0x6d,0x61,0x70,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x33,0x5d,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x61,0x50,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x70,0x72,0x6f,0x6a,0x5a,0x57,0x20,0x3d,0x20,0x67,0x6c,0x5f,0x50,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2e,0x7a,0x77,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,

};
/*
    #version 100
    precision mediump float;
    precision highp int;
    
    varying highp vec2 projZW;
    
    highp vec4 encodeDepth(highp float v)
    {
        highp vec4 _24 = fract(vec4(1.0, 255.0, 65025.0, 16581375.0) * v);
        return _24 - (_24.yzww * vec4(0.0039215688593685626983642578125, 0.0039215688593685626983642578125, 0.0039215688593685626983642578125, 0.0));
    }
    
    void main()
    {
        highp float param = projZW.x / projZW.y;
        gl_FragData[0] = encodeDepth(param);
    }
    
*/
static const char fs_shadow_map_source_glsl100[452] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x31,0x30,0x30,0x0a,0x70,0x72,0x65,
    0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,0x6d,0x65,0x64,0x69,0x75,0x6d,0x70,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x3b,0x0a,0x70,0x72,0x65,0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x69,0x6e,0x74,0x3b,0x0a,0x0a,0x76,0x61,0x72,0x79,
    0x69,0x6e,0x67,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x70,
    0x72,0x6f,0x6a,0x5a,0x57,0x3b,0x0a,0x0a,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x34,0x20,0x65,0x6e,0x63,0x6f,0x64,0x65,0x44,0x65,0x70,0x74,0x68,0x28,0x68,
    0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x76,0x29,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,
    0x32,0x34,0x20,0x3d,0x20,0x66,0x72,0x61,0x63,0x74,0x28,0x76,0x65,0x63,0x34,0x28,
    0x31,0x2e,0x30,0x2c,0x20,0x32,0x35,0x35,0x2e,0x30,0x2c,0x20,0x36,0x35,0x30,0x32,
    0x35,0x2e,0x30,0x2c,0x20,0x31,0x36,0x35,0x38,0x31,0x33,0x37,0x35,0x2e,0x30,0x29,
    0x20,0x2a,0x20,0x76,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,
    0x6e,0x20,0x5f,0x32,0x34,0x20,0x2d,0x20,0x28,0x5f,0x32,0x34,0x2e,0x79,0x7a,0x77,
    0x77,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x30,0x2e,0x30,0x30,0x33,0x39,0x32,
    0x31,0x35,0x36,0x38,0x38,0x35,0x39,0x33,0x36,0x38,0x35,0x36,0x32,0x36,0x39,0x38,
    0x33,0x36,0x34,0x32,0x35,0x37,0x38,0x31,0x32,0x35,0x2c,0x20,0x30,0x2e,0x30,0x30,
    0x33,0x39,0x32,0x31,0x35,0x36,0x38,0x38,0x35,0x39,0x33,0x36,0x38,0x35,0x36,0x32,
    0x36,0x39,0x38,0x33,0x36,0x34,0x32,0x35,0x37,0x38,0x31,0x32,0x35,0x2c,0x20,0x30,
    0x2e,0x30,0x30,0x33,0x39,0x32,0x31,0x35,0x36,0x38,0x38,0x35,0x39,0x33,0x36,0x38,
    0x35,0x36,0x32,0x36,0x39,0x38,0x33,0x36,0x34,0x32,0x35,0x37,0x38,0x31,0x32,0x35,
    0x2c,0x20,0x30,0x2e,0x30,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x6f,0x69,0x64,
    0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,
    0x3d,0x20,0x70,0x72,0x6f,0x6a,0x5a,0x57,0x2e,0x78,0x20,0x2f,0x20,0x70,0x72,0x6f,
    0x6a,0x5a,0x57,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x46,0x72,
    0x61,0x67,0x44,0x61,0x74,0x61,0x5b,0x30,0x5d,0x20,0x3d,0x20,0x65,0x6e,0x63,0x6f,
    0x64,0x65,0x44,0x65,0x70,0x74,0x68,0x28,0x70,0x61,0x72,0x61,0x6d,0x29,0x3b,0x0a,
    0x7d,0x0a,0x0a,0x00,
};
/*
    #version 100
    
    uniform vec4 vs_params[16];
    varying vec3 vNormal;
    attribute vec3 aPosition;
    varying vec3 vFragPos;
    varying vec2 vTexCoord;
    attribute vec2 aTexCoord;
    varying vec4 vColorMult;
    attribute vec4 aColorMult;
    varying vec4 vColorOffset;
    attribute vec4 aColorOffset;
    varying vec4 v_shadow_pos;
    attribute vec3 aNormal;
    
    void main()
    {
        vec4 _28 = vec4(aPosition, 1.0);
        vNormal = vec3(normalize(mat4(vs_params[8], vs_params[9], vs_params[10], vs_params[11]) * _28).xyz);
        mat4 _38 = mat4(vs_params[4], vs_params[5], vs_params[6], vs_params[7]);
        vFragPos = mat3(_38[0].xyz, _38[1].xyz, _38[2].xyz) * aPosition;
        vTexCoord = aTexCoord;
        vColorMult = aColorMult;
        vColorOffset = aColorOffset;
        v_shadow_pos = mat4(vs_params[12], vs_params[13], vs_params[14], vs_params[15]) * _28;
        gl_Position = mat4(vs_params[0], vs_params[1], vs_params[2], vs_params[3]) * _28;
    }
    
*/
static const char vs_source_glsl100[895] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x31,0x30,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x31,0x36,0x5d,0x3b,0x0a,0x76,0x61,0x72,0x79,0x69,0x6e,
    0x67,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,
    0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x20,0x76,0x65,0x63,0x33,0x20,0x61,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x76,0x61,0x72,0x79,0x69,0x6e,
    0x67,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x46,0x72,0x61,0x67,0x50,0x6f,0x73,0x3b,
    0x0a,0x76,0x61,0x72,0x79,0x69,0x6e,0x67,0x20,0x76,0x65,0x63,0x32,0x20,0x76,0x54,
    0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x61,0x74,0x74,0x72,0x69,0x62,0x75,
    0x74,0x65,0x20,0x76,0x65,0x63,0x32,0x20,0x61,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,
    0x64,0x3b,0x0a,0x76,0x61,0x72,0x79,0x69,0x6e,0x67,0x20,0x76,0x65,0x63,0x34,0x20,
    0x76,0x43,0x6f,0x6c,0x6f,0x72,0x4d,0x75,0x6c,0x74,0x3b,0x0a,0x61,0x74,0x74,0x72,
    0x69,0x62,0x75,0x74,0x65,0x20,0x76,0x65,0x63,0x34,0x20,0x61,0x43,0x6f,0x6c,0x6f,
    0x72,0x4d,0x75,0x6c,0x74,0x3b,0x0a,0x76,0x61,0x72,0x79,0x69,0x6e,0x67,0x20,0x76,
    0x65,0x63,0x34,0x20,0x76,0x43,0x6f,0x6c,0x6f,0x72,0x4f,0x66,0x66,0x73,0x65,0x74,
    0x3b,0x0a,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x20,0x76,0x65,0x63,0x34,
    0x20,0x61,0x43,0x6f,0x6c,0x6f,0x72,0x4f,0x66,0x66,0x73,0x65,0x74,0x3b,0x0a,0x76,
    0x61,0x72,0x79,0x69,0x6e,0x67,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x5f,0x73,0x68,
    0x61,0x64,0x6f,0x77,0x5f,0x70,0x6f,0x73,0x3b,0x0a,0x61,0x74,0x74,0x72,0x69,0x62,
    0x75,0x74,0x65,0x20,0x76,0x65,0x63,0x33,0x20,0x61,0x4e,0x6f,0x72,0x6d,0x61,0x6c,
    0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x32,0x38,0x20,0x3d,0x20,
    0x76,0x65,0x63,0x34,0x28,0x61,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,
    0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x4e,0x6f,0x72,0x6d,0x61,
    0x6c,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,
    0x7a,0x65,0x28,0x6d,0x61,0x74,0x34,0x28,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x38,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x39,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x30,
    0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x31,0x5d,
    0x29,0x20,0x2a,0x20,0x5f,0x32,0x38,0x29,0x2e,0x78,0x79,0x7a,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x6d,0x61,0x74,0x34,0x20,0x5f,0x33,0x38,0x20,0x3d,0x20,0x6d,0x61,
    0x74,0x34,0x28,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x34,0x5d,0x2c,
    0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x35,0x5d,0x2c,0x20,0x76,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x36,0x5d,0x2c,0x20,0x76,0x73,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x37,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x76,0x46,0x72,0x61,0x67,0x50,0x6f,0x73,0x20,0x3d,0x20,0x6d,0x61,0x74,0x33,0x28,
    0x5f,0x33,0x38,0x5b,0x30,0x5d,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x5f,0x33,0x38,0x5b,
    0x31,0x5d,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x5f,0x33,0x38,0x5b,0x32,0x5d,0x2e,0x78,
    0x79,0x7a,0x29,0x20,0x2a,0x20,0x61,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x76,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x20,0x3d,
    0x20,0x61,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x76,0x43,0x6f,0x6c,0x6f,0x72,0x4d,0x75,0x6c,0x74,0x20,0x3d,0x20,0x61,0x43,0x6f,
    0x6c,0x6f,0x72,0x4d,0x75,0x6c,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x43,0x6f,
    0x6c,0x6f,0x72,0x4f,0x66,0x66,0x73,0x65,0x74,0x20,0x3d,0x20,0x61,0x43,0x6f,0x6c,
    0x6f,0x72,0x4f,0x66,0x66,0x73,0x65,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x5f,
    0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,0x70,0x6f,0x73,0x20,0x3d,0x20,0x6d,0x61,0x74,
    0x34,0x28,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x32,0x5d,0x2c,
    0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x33,0x5d,0x2c,0x20,
    0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x34,0x5d,0x2c,0x20,0x76,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x35,0x5d,0x29,0x20,0x2a,0x20,
    0x5f,0x32,0x38,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x76,0x73,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x5b,0x31,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x32,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x33,0x5d,0x29,0x20,0x2a,0x20,0x5f,0x32,0x38,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 100
    precision mediump float;
    precision highp int;
    
    uniform highp vec4 material_params[5];
    uniform highp vec4 fs_params[3];
    uniform highp vec4 light_params[4];
    uniform highp vec4 light2_params[4];
    uniform highp sampler2D u_image_shadow_map;
    uniform highp sampler2D uImage0;
    
    varying highp vec4 v_shadow_pos;
    varying highp vec3 vNormal;
    varying highp vec3 vFragPos;
    varying highp vec2 vTexCoord;
    varying highp vec4 vColorMult;
    varying highp vec4 vColorOffset;
    
    highp float oren_nayar_diffuse(highp vec3 light_direction, highp vec3 view_direction, highp vec3 surface_normal, highp float roughness, highp float albedo)
    {
        highp float _213 = dot(light_direction, surface_normal);
        highp float _217 = dot(surface_normal, view_direction);
        highp float _223 = dot(light_direction, view_direction) - (_213 * _217);
        highp float _234 = roughness * roughness;
        return ((albedo * max(0.0, _213)) * ((1.0 + (_234 * ((albedo / (_234 + 0.12999999523162841796875)) + (0.5 / (_234 + 0.3300000131130218505859375))))) + ((((0.449999988079071044921875 * _234) / (_234 + 0.0900000035762786865234375)) * _223) / mix(1.0, max(_213, _217), step(0.0, _223))))) * 0.3183098733425140380859375;
    }
    
    highp float lambert_diffuse(highp vec3 light_direction, highp vec3 normal)
    {
        return dot(normal, light_direction);
    }
    
    highp float decodeDepth(highp vec4 rgba)
    {
        return dot(rgba, vec4(1.0, 0.0039215688593685626983642578125, 1.5378700481960549950599670410156e-05, 6.0308629201699659461155533790588e-08));
    }
    
    highp float calc_shadow(highp float cos_theta)
    {
        highp vec3 _168 = v_shadow_pos.xyz / vec3(v_shadow_pos.w);
        highp vec4 param = texture2D(u_image_shadow_map, (_168.xy * 0.5) + vec2(0.5));
        return step(decodeDepth(param), _168.z - (0.5 * clamp(0.004999999888241291046142578125 * tan(acos(cos_theta)), 0.0, 0.00999999977648258209228515625)));
    }
    
    highp float calc_spec(highp vec3 light_dir, highp vec3 view_dir, highp vec3 normal)
    {
        return ((8.0 + material_params[3].w) * 0.0397887341678142547607421875) * pow(max(dot(normal, normalize(light_dir + view_dir)), 0.0), material_params[3].w);
    }
    
    highp float attenuation_point(highp vec3 distance_by_radius, highp float falloff)
    {
        return pow(1.0 - min(1.0, length(distance_by_radius)), 2.0 * falloff);
    }
    
    highp float luminance(highp vec3 linear)
    {
        return dot(linear, vec3(0.2125999927520751953125, 0.715200006961822509765625, 0.072200000286102294921875));
    }
    
    highp vec3 linear_to_gamma(highp vec3 x)
    {
        return pow(x, vec3(0.4545454680919647216796875));
    }
    
    highp vec3 tonemap_reinhard(highp vec3 x)
    {
        highp vec3 param = x;
        highp vec3 param_1 = x / vec3(1.0 + luminance(param));
        return linear_to_gamma(param_1);
    }
    
    void main()
    {
        highp vec3 _282 = normalize(vNormal);
        highp vec3 _294 = normalize(fs_params[2].xyz - vFragPos);
        highp vec3 total = material_params[3].xyz;
        highp vec4 _305 = texture2D(uImage0, vTexCoord);
        highp vec4 _308 = _305 * vColorMult;
        highp vec3 _318 = vec3(_308.xyz) * material_params[1].xyz;
        highp vec3 param = light_params[0].xyz;
        highp vec3 param_1 = _294;
        highp vec3 param_2 = _282;
        highp float param_3 = 0.5;
        highp float param_4 = 1.0;
        highp float _333 = oren_nayar_diffuse(param, param_1, param_2, param_3, param_4);
        total += (material_params[0].xyz * light_params[1].xyz);
        if (_333 > 0.0)
        {
            highp vec3 param_5 = light_params[0].xyz;
            highp vec3 param_6 = _282;
            highp vec3 param_7 = light_params[0].xyz;
            highp vec3 param_8 = _294;
            highp vec3 param_9 = _282;
            total += ((((material_params[2].xyz * light_params[3].xyz) * calc_spec(param_7, param_8, param_9)) + ((_318 * light_params[2].xyz) * _333)) * (1.0 - calc_shadow(clamp(lambert_diffuse(param_5, param_6), 0.0, 1.0))));
        }
        highp vec3 _385 = light2_params[0].xyz - vFragPos;
        highp vec3 _393 = _385 / vec3(length(_385));
        highp vec3 param_10 = _393;
        highp vec3 param_11 = _294;
        highp vec3 param_12 = _282;
        highp float param_13 = 0.5;
        highp float param_14 = 1.0;
        highp float _403 = oren_nayar_diffuse(param_10, param_11, param_12, param_13, param_14);
        total += (material_params[0].xyz * light2_params[1].xyz);
        if (_403 > 0.0)
        {
            highp vec3 param_15 = _385 / vec3(light2_params[0].w);
            highp float param_16 = light2_params[1].w;
            highp float _425 = attenuation_point(param_15, param_16);
            if (_425 > 0.0)
            {
                highp vec3 param_17 = _393;
                highp vec3 param_18 = _294;
                highp vec3 param_19 = _282;
                total += ((((material_params[2].xyz * light2_params[3].xyz) * calc_spec(param_17, param_18, param_19)) + ((_318 * light2_params[2].xyz) * _403)) * _425);
            }
        }
        highp vec3 _456 = tonemap_reinhard(total);
        total = _456;
        gl_FragData[0] = vec4(_456, _308.w);
    }
    
*/
static const char fs_source_glsl100[4868] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x31,0x30,0x30,0x0a,0x70,0x72,0x65,
    0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,0x6d,0x65,0x64,0x69,0x75,0x6d,0x70,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x3b,0x0a,0x70,0x72,0x65,0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x69,0x6e,0x74,0x3b,0x0a,0x0a,0x75,0x6e,0x69,0x66,
    0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x6d,
    0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x35,
    0x5d,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x76,0x65,0x63,0x34,0x20,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x33,0x5d,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x5b,0x34,0x5d,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x6c,0x69,0x67,0x68,0x74,
    0x32,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x34,0x5d,0x3b,0x0a,0x75,0x6e,0x69,
    0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x73,0x61,0x6d,0x70,0x6c,
    0x65,0x72,0x32,0x44,0x20,0x75,0x5f,0x69,0x6d,0x61,0x67,0x65,0x5f,0x73,0x68,0x61,
    0x64,0x6f,0x77,0x5f,0x6d,0x61,0x70,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,
    0x20,0x75,0x49,0x6d,0x61,0x67,0x65,0x30,0x3b,0x0a,0x0a,0x76,0x61,0x72,0x79,0x69,
    0x6e,0x67,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x5f,
    0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,0x70,0x6f,0x73,0x3b,0x0a,0x76,0x61,0x72,0x79,
    0x69,0x6e,0x67,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x76,
    0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x76,0x61,0x72,0x79,0x69,0x6e,0x67,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x46,0x72,0x61,0x67,
    0x50,0x6f,0x73,0x3b,0x0a,0x76,0x61,0x72,0x79,0x69,0x6e,0x67,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x76,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,
    0x64,0x3b,0x0a,0x76,0x61,0x72,0x79,0x69,0x6e,0x67,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x43,0x6f,0x6c,0x6f,0x72,0x4d,0x75,0x6c,0x74,
    0x3b,0x0a,0x76,0x61,0x72,0x79,0x69,0x6e,0x67,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x34,0x20,0x76,0x43,0x6f,0x6c,0x6f,0x72,0x4f,0x66,0x66,0x73,0x65,
    0x74,0x3b,0x0a,0x0a,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x6f,0x72,0x65,0x6e,0x5f,0x6e,0x61,0x79,0x61,0x72,0x5f,0x64,0x69,0x66,0x66,0x75,
    0x73,0x65,0x28,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x6c,0x69,
    0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x69,0x65,0x77,0x5f,0x64,
    0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x33,0x20,0x73,0x75,0x72,0x66,0x61,0x63,0x65,0x5f,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x2c,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x2c,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x61,0x6c,0x62,0x65,0x64,0x6f,0x29,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x5f,0x32,0x31,0x33,0x20,0x3d,0x20,0x64,0x6f,0x74,0x28,0x6c,0x69,0x67,
    0x68,0x74,0x5f,0x64,0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x73,0x75,
    0x72,0x66,0x61,0x63,0x65,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,
    0x32,0x31,0x37,0x20,0x3d,0x20,0x64,0x6f,0x74,0x28,0x73,0x75,0x72,0x66,0x61,0x63,
    0x65,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x76,0x69,0x65,0x77,0x5f,0x64,
    0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x32,0x33,0x20,
    0x3d,0x20,0x64,0x6f,0x74,0x28,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x65,
    0x63,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x76,0x69,0x65,0x77,0x5f,0x64,0x69,0x72,0x65,
    0x63,0x74,0x69,0x6f,0x6e,0x29,0x20,0x2d,0x20,0x28,0x5f,0x32,0x31,0x33,0x20,0x2a,
    0x20,0x5f,0x32,0x31,0x37,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x33,0x34,0x20,0x3d,0x20,0x72,
    0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x20,0x2a,0x20,0x72,0x6f,0x75,0x67,0x68,
    0x6e,0x65,0x73,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,
    0x20,0x28,0x28,0x61,0x6c,0x62,0x65,0x64,0x6f,0x20,0x2a,0x20,0x6d,0x61,0x78,0x28,
    0x30,0x2e,0x30,0x2c,0x20,0x5f,0x32,0x31,0x33,0x29,0x29,0x20,0x2a,0x20,0x28,0x28,
    0x31,0x2e,0x30,0x20,0x2b,0x20,0x28,0x5f,0x32,0x33,0x34,0x20,0x2a,0x20,0x28,0x28,
    0x61,0x6c,0x62,0x65,0x64,0x6f,0x20,0x2f,0x20,0x28,0x5f,0x32,0x33,0x34,0x20,0x2b,
    0x20,0x30,0x2e,0x31,0x32,0x39,0x39,0x39,0x39,0x39,0x39,0x35,0x32,0x33,0x31,0x36,
    0x32,0x38,0x34,0x31,0x37,0x39,0x36,0x38,0x37,0x35,0x29,0x29,0x20,0x2b,0x20,0x28,
    0x30,0x2e,0x35,0x20,0x2f,0x20,0x28,0x5f,0x32,0x33,0x34,0x20,0x2b,0x20,0x30,0x2e,
    0x33,0x33,0x30,0x30,0x30,0x30,0x30,0x31,0x33,0x31,0x31,0x33,0x30,0x32,0x31,0x38,
    0x35,0x30,0x35,0x38,0x35,0x39,0x33,0x37,0x35,0x29,0x29,0x29,0x29,0x29,0x20,0x2b,
    0x20,0x28,0x28,0x28,0x28,0x30,0x2e,0x34,0x34,0x39,0x39,0x39,0x39,0x39,0x38,0x38,
    0x30,0x37,0x39,0x30,0x37,0x31,0x30,0x34,0x34,0x39,0x32,0x31,0x38,0x37,0x35,0x20,
    0x2a,0x20,0x5f,0x32,0x33,0x34,0x29,0x20,0x2f,0x20,0x28,0x5f,0x32,0x33,0x34,0x20,
    0x2b,0x20,0x30,0x2e,0x30,0x39,0x30,0x30,0x30,0x30,0x30,0x30,0x33,0x35,0x37,0x36,
    0x32,0x37,0x38,0x36,0x38,0x36,0x35,0x32,0x33,0x34,0x33,0x37,0x35,0x29,0x29,0x20,
    0x2a,0x20,0x5f,0x32,0x32,0x33,0x29,0x20,0x2f,0x20,0x6d,0x69,0x78,0x28,0x31,0x2e,
    0x30,0x2c,0x20,0x6d,0x61,0x78,0x28,0x5f,0x32,0x31,0x33,0x2c,0x20,0x5f,0x32,0x31,
    0x37,0x29,0x2c,0x20,0x73,0x74,0x65,0x70,0x28,0x30,0x2e,0x30,0x2c,0x20,0x5f,0x32,
    0x32,0x33,0x29,0x29,0x29,0x29,0x29,0x20,0x2a,0x20,0x30,0x2e,0x33,0x31,0x38,0x33,
    0x30,0x39,0x38,0x37,0x33,0x33,0x34,0x32,0x35,0x31,0x34,0x30,0x33,0x38,0x30,0x38,
    0x35,0x39,0x33,0x37,0x35,0x3b,0x0a,0x7d,0x0a,0x0a,0x68,0x69,0x67,0x68,0x70,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x6c,0x61,0x6d,0x62,0x65,0x72,0x74,0x5f,0x64,0x69,
    0x66,0x66,0x75,0x73,0x65,0x28,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,
    0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,
    0x2c,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,
    0x6e,0x20,0x64,0x6f,0x74,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x6c,0x69,
    0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x29,0x3b,0x0a,
    0x7d,0x0a,0x0a,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x64,
    0x65,0x63,0x6f,0x64,0x65,0x44,0x65,0x70,0x74,0x68,0x28,0x68,0x69,0x67,0x68,0x70,
    0x20,0x76,0x65,0x63,0x34,0x20,0x72,0x67,0x62,0x61,0x29,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x64,0x6f,0x74,0x28,0x72,0x67,0x62,
    0x61,0x2c,0x20,0x76,0x65,0x63,0x34,0x28,0x31,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,
    0x30,0x33,0x39,0x32,0x31,0x35,0x36,0x38,0x38,0x35,0x39,0x33,0x36,0x38,0x35,0x36,
    0x32,0x36,0x39,0x38,0x33,0x36,0x34,0x32,0x35,0x37,0x38,0x31,0x32,0x35,0x2c,0x20,
    0x31,0x2e,0x35,0x33,0x37,0x38,0x37,0x30,0x30,0x34,0x38,0x31,0x39,0x36,0x30,0x35,
    0x34,0x39,0x39,0x35,0x30,0x35,0x39,0x39,0x36,0x37,0x30,0x34,0x31,0x30,0x31,0x35,
    0x36,0x65,0x2d,0x30,0x35,0x2c,0x20,0x36,0x2e,0x30,0x33,0x30,0x38,0x36,0x32,0x39,
    0x32,0x30,0x31,0x36,0x39,0x39,0x36,0x35,0x39,0x34,0x36,0x31,0x31,0x35,0x35,0x35,
    0x33,0x33,0x37,0x39,0x30,0x35,0x38,0x38,0x65,0x2d,0x30,0x38,0x29,0x29,0x3b,0x0a,
    0x7d,0x0a,0x0a,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x63,
    0x61,0x6c,0x63,0x5f,0x73,0x68,0x61,0x64,0x6f,0x77,0x28,0x68,0x69,0x67,0x68,0x70,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x63,0x6f,0x73,0x5f,0x74,0x68,0x65,0x74,0x61,
    0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x33,0x20,0x5f,0x31,0x36,0x38,0x20,0x3d,0x20,0x76,0x5f,0x73,0x68,0x61,0x64,
    0x6f,0x77,0x5f,0x70,0x6f,0x73,0x2e,0x78,0x79,0x7a,0x20,0x2f,0x20,0x76,0x65,0x63,
    0x33,0x28,0x76,0x5f,0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,0x70,0x6f,0x73,0x2e,0x77,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x34,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,
    0x65,0x32,0x44,0x28,0x75,0x5f,0x69,0x6d,0x61,0x67,0x65,0x5f,0x73,0x68,0x61,0x64,
    0x6f,0x77,0x5f,0x6d,0x61,0x70,0x2c,0x20,0x28,0x5f,0x31,0x36,0x38,0x2e,0x78,0x79,
    0x20,0x2a,0x20,0x30,0x2e,0x35,0x29,0x20,0x2b,0x20,0x76,0x65,0x63,0x32,0x28,0x30,
    0x2e,0x35,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,
    0x20,0x73,0x74,0x65,0x70,0x28,0x64,0x65,0x63,0x6f,0x64,0x65,0x44,0x65,0x70,0x74,
    0x68,0x28,0x70,0x61,0x72,0x61,0x6d,0x29,0x2c,0x20,0x5f,0x31,0x36,0x38,0x2e,0x7a,
    0x20,0x2d,0x20,0x28,0x30,0x2e,0x35,0x20,0x2a,0x20,0x63,0x6c,0x61,0x6d,0x70,0x28,
    0x30,0x2e,0x30,0x30,0x34,0x39,0x39,0x39,0x39,0x39,0x39,0x38,0x38,0x38,0x32,0x34,
    0x31,0x32,0x39,0x31,0x30,0x34,0x36,0x31,0x34,0x32,0x35,0x37,0x38,0x31,0x32,0x35,
    0x20,0x2a,0x20,0x74,0x61,0x6e,0x28,0x61,0x63,0x6f,0x73,0x28,0x63,0x6f,0x73,0x5f,
    0x74,0x68,0x65,0x74,0x61,0x29,0x29,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x30,0x2e,
    0x30,0x30,0x39,0x39,0x39,0x39,0x39,0x39,0x39,0x37,0x37,0x36,0x34,0x38,0x32,0x35,
    0x38,0x32,0x30,0x39,0x32,0x32,0x38,0x35,0x31,0x35,0x36,0x32,0x35,0x29,0x29,0x29,
    0x3b,0x0a,0x7d,0x0a,0x0a,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x63,0x61,0x6c,0x63,0x5f,0x73,0x70,0x65,0x63,0x28,0x68,0x69,0x67,0x68,0x70,
    0x20,0x76,0x65,0x63,0x33,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x2c,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x69,0x65,0x77,
    0x5f,0x64,0x69,0x72,0x2c,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,
    0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,
    0x65,0x74,0x75,0x72,0x6e,0x20,0x28,0x28,0x38,0x2e,0x30,0x20,0x2b,0x20,0x6d,0x61,
    0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,
    0x2e,0x77,0x29,0x20,0x2a,0x20,0x30,0x2e,0x30,0x33,0x39,0x37,0x38,0x38,0x37,0x33,
    0x34,0x31,0x36,0x37,0x38,0x31,0x34,0x32,0x35,0x34,0x37,0x36,0x30,0x37,0x34,0x32,
    0x31,0x38,0x37,0x35,0x29,0x20,0x2a,0x20,0x70,0x6f,0x77,0x28,0x6d,0x61,0x78,0x28,
    0x64,0x6f,0x74,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x6e,0x6f,0x72,0x6d,
    0x61,0x6c,0x69,0x7a,0x65,0x28,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x20,
    0x2b,0x20,0x76,0x69,0x65,0x77,0x5f,0x64,0x69,0x72,0x29,0x29,0x2c,0x20,0x30,0x2e,
    0x30,0x29,0x2c,0x20,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x5b,0x33,0x5d,0x2e,0x77,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x68,0x69,
    0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x61,0x74,0x74,0x65,0x6e,0x75,
    0x61,0x74,0x69,0x6f,0x6e,0x5f,0x70,0x6f,0x69,0x6e,0x74,0x28,0x68,0x69,0x67,0x68,
    0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x64,0x69,0x73,0x74,0x61,0x6e,0x63,0x65,0x5f,
    0x62,0x79,0x5f,0x72,0x61,0x64,0x69,0x75,0x73,0x2c,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x66,0x61,0x6c,0x6c,0x6f,0x66,0x66,0x29,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x70,0x6f,0x77,
    0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x6d,0x69,0x6e,0x28,0x31,0x2e,0x30,0x2c,0x20,
    0x6c,0x65,0x6e,0x67,0x74,0x68,0x28,0x64,0x69,0x73,0x74,0x61,0x6e,0x63,0x65,0x5f,
    0x62,0x79,0x5f,0x72,0x61,0x64,0x69,0x75,0x73,0x29,0x29,0x2c,0x20,0x32,0x2e,0x30,
    0x20,0x2a,0x20,0x66,0x61,0x6c,0x6c,0x6f,0x66,0x66,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,
    0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x6c,0x75,0x6d,0x69,
    0x6e,0x61,0x6e,0x63,0x65,0x28,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,
    0x20,0x6c,0x69,0x6e,0x65,0x61,0x72,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,
    0x65,0x74,0x75,0x72,0x6e,0x20,0x64,0x6f,0x74,0x28,0x6c,0x69,0x6e,0x65,0x61,0x72,
    0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x32,0x31,0x32,0x35,0x39,0x39,0x39,
    0x39,0x32,0x37,0x35,0x32,0x30,0x37,0x35,0x31,0x39,0x35,0x33,0x31,0x32,0x35,0x2c,
    0x20,0x30,0x2e,0x37,0x31,0x35,0x32,0x30,0x30,0x30,0x30,0x36,0x39,0x36,0x31,0x38,
    0x32,0x32,0x35,0x30,0x39,0x37,0x36,0x35,0x36,0x32,0x35,0x2c,0x20,0x30,0x2e,0x30,
    0x37,0x32,0x32,0x30,0x30,0x30,0x30,0x30,0x32,0x38,0x36,0x31,0x30,0x32,0x32,0x39,
    0x34,0x39,0x32,0x31,0x38,0x37,0x35,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x68,0x69,
    0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x6c,0x69,0x6e,0x65,0x61,0x72,0x5f,
    0x74,0x6f,0x5f,0x67,0x61,0x6d,0x6d,0x61,0x28,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x33,0x20,0x78,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,
    0x75,0x72,0x6e,0x20,0x70,0x6f,0x77,0x28,0x78,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,
    0x30,0x2e,0x34,0x35,0x34,0x35,0x34,0x35,0x34,0x36,0x38,0x30,0x39,0x31,0x39,0x36,
    0x34,0x37,0x32,0x31,0x36,0x37,0x39,0x36,0x38,0x37,0x35,0x29,0x29,0x3b,0x0a,0x7d,
    0x0a,0x0a,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x74,0x6f,0x6e,
    0x65,0x6d,0x61,0x70,0x5f,0x72,0x65,0x69,0x6e,0x68,0x61,0x72,0x64,0x28,0x68,0x69,
    0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x78,0x29,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x20,0x3d,0x20,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,
    0x20,0x78,0x20,0x2f,0x20,0x76,0x65,0x63,0x33,0x28,0x31,0x2e,0x30,0x20,0x2b,0x20,
    0x6c,0x75,0x6d,0x69,0x6e,0x61,0x6e,0x63,0x65,0x28,0x70,0x61,0x72,0x61,0x6d,0x29,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6c,0x69,
    0x6e,0x65,0x61,0x72,0x5f,0x74,0x6f,0x5f,0x67,0x61,0x6d,0x6d,0x61,0x28,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x31,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,
    0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x32,0x38,0x32,0x20,0x3d,0x20,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x76,0x4e,0x6f,0x72,0x6d,0x61,0x6c,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x33,0x20,0x5f,0x32,0x39,0x34,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,
    0x7a,0x65,0x28,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x2e,
    0x78,0x79,0x7a,0x20,0x2d,0x20,0x76,0x46,0x72,0x61,0x67,0x50,0x6f,0x73,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,
    0x74,0x6f,0x74,0x61,0x6c,0x20,0x3d,0x20,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,0x2e,0x78,0x79,0x7a,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,
    0x33,0x30,0x35,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x32,0x44,0x28,
    0x75,0x49,0x6d,0x61,0x67,0x65,0x30,0x2c,0x20,0x76,0x54,0x65,0x78,0x43,0x6f,0x6f,
    0x72,0x64,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x34,0x20,0x5f,0x33,0x30,0x38,0x20,0x3d,0x20,0x5f,0x33,0x30,0x35,0x20,
    0x2a,0x20,0x76,0x43,0x6f,0x6c,0x6f,0x72,0x4d,0x75,0x6c,0x74,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x33,0x31,
    0x38,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x5f,0x33,0x30,0x38,0x2e,0x78,0x79,
    0x7a,0x29,0x20,0x2a,0x20,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x20,0x3d,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x5b,0x30,0x5d,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,
    0x3d,0x20,0x5f,0x32,0x39,0x34,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,
    0x20,0x5f,0x32,0x38,0x32,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,
    0x20,0x30,0x2e,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x20,0x3d,0x20,
    0x31,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x5f,0x33,0x33,0x33,0x20,0x3d,0x20,0x6f,0x72,0x65,0x6e,
    0x5f,0x6e,0x61,0x79,0x61,0x72,0x5f,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x28,0x70,
    0x61,0x72,0x61,0x6d,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x2c,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x32,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x2c,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x74,
    0x6f,0x74,0x61,0x6c,0x20,0x2b,0x3d,0x20,0x28,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,
    0x6c,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x78,0x79,0x7a,0x20,
    0x2a,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,
    0x5d,0x2e,0x78,0x79,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,
    0x5f,0x33,0x33,0x33,0x20,0x3e,0x20,0x30,0x2e,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x20,0x3d,0x20,0x6c,
    0x69,0x67,0x68,0x74,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x78,
    0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x36,0x20,0x3d,
    0x20,0x5f,0x32,0x38,0x32,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x37,0x20,0x3d,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x5b,0x30,0x5d,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x38,0x20,0x3d,0x20,0x5f,0x32,0x39,0x34,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x39,0x20,0x3d,0x20,0x5f,0x32,0x38,0x32,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x74,0x6f,0x74,0x61,0x6c,0x20,0x2b,0x3d,0x20,
    0x28,0x28,0x28,0x28,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x5b,0x32,0x5d,0x2e,0x78,0x79,0x7a,0x20,0x2a,0x20,0x6c,0x69,0x67,
    0x68,0x74,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,0x2e,0x78,0x79,0x7a,
    0x29,0x20,0x2a,0x20,0x63,0x61,0x6c,0x63,0x5f,0x73,0x70,0x65,0x63,0x28,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x37,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x38,0x2c,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x39,0x29,0x29,0x20,0x2b,0x20,0x28,0x28,0x5f,0x33,
    0x31,0x38,0x20,0x2a,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x32,0x5d,0x2e,0x78,0x79,0x7a,0x29,0x20,0x2a,0x20,0x5f,0x33,0x33,0x33,
    0x29,0x29,0x20,0x2a,0x20,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x63,0x61,0x6c,0x63,
    0x5f,0x73,0x68,0x61,0x64,0x6f,0x77,0x28,0x63,0x6c,0x61,0x6d,0x70,0x28,0x6c,0x61,
    0x6d,0x62,0x65,0x72,0x74,0x5f,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x28,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x35,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x36,0x29,0x2c,
    0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x29,0x29,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x33,0x20,0x5f,0x33,0x38,0x35,0x20,0x3d,0x20,0x6c,0x69,0x67,0x68,0x74,
    0x32,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x78,0x79,0x7a,0x20,
    0x2d,0x20,0x76,0x46,0x72,0x61,0x67,0x50,0x6f,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x33,0x39,0x33,0x20,
    0x3d,0x20,0x5f,0x33,0x38,0x35,0x20,0x2f,0x20,0x76,0x65,0x63,0x33,0x28,0x6c,0x65,
    0x6e,0x67,0x74,0x68,0x28,0x5f,0x33,0x38,0x35,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x31,0x30,0x20,0x3d,0x20,0x5f,0x33,0x39,0x33,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x31,0x31,0x20,0x3d,0x20,0x5f,0x32,0x39,0x34,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x31,0x32,0x20,0x3d,0x20,0x5f,0x32,0x38,0x32,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x31,0x33,0x20,0x3d,0x20,0x30,0x2e,0x35,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x31,0x34,0x20,0x3d,0x20,0x31,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x34,0x30,
    0x33,0x20,0x3d,0x20,0x6f,0x72,0x65,0x6e,0x5f,0x6e,0x61,0x79,0x61,0x72,0x5f,0x64,
    0x69,0x66,0x66,0x75,0x73,0x65,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x30,0x2c,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x31,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x31,0x32,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x33,0x2c,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x31,0x34,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x74,0x6f,
    0x74,0x61,0x6c,0x20,0x2b,0x3d,0x20,0x28,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x78,0x79,0x7a,0x20,0x2a,
    0x20,0x6c,0x69,0x67,0x68,0x74,0x32,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,
    0x5d,0x2e,0x78,0x79,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,
    0x5f,0x34,0x30,0x33,0x20,0x3e,0x20,0x30,0x2e,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x35,0x20,0x3d,0x20,
    0x5f,0x33,0x38,0x35,0x20,0x2f,0x20,0x76,0x65,0x63,0x33,0x28,0x6c,0x69,0x67,0x68,
    0x74,0x32,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x77,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x36,0x20,0x3d,0x20,
    0x6c,0x69,0x67,0x68,0x74,0x32,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,
    0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x34,0x32,0x35,0x20,0x3d,0x20,0x61,
    0x74,0x74,0x65,0x6e,0x75,0x61,0x74,0x69,0x6f,0x6e,0x5f,0x70,0x6f,0x69,0x6e,0x74,
    0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x35,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x31,0x36,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,
    0x20,0x28,0x5f,0x34,0x32,0x35,0x20,0x3e,0x20,0x30,0x2e,0x30,0x29,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x31,0x37,0x20,0x3d,0x20,0x5f,0x33,0x39,0x33,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x38,0x20,
    0x3d,0x20,0x5f,0x32,0x39,0x34,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x31,0x39,0x20,0x3d,0x20,0x5f,0x32,0x38,0x32,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x74,0x6f,0x74,0x61,
    0x6c,0x20,0x2b,0x3d,0x20,0x28,0x28,0x28,0x28,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,
    0x6c,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x2e,0x78,0x79,0x7a,0x20,
    0x2a,0x20,0x6c,0x69,0x67,0x68,0x74,0x32,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x33,0x5d,0x2e,0x78,0x79,0x7a,0x29,0x20,0x2a,0x20,0x63,0x61,0x6c,0x63,0x5f,0x73,
    0x70,0x65,0x63,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x37,0x2c,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x31,0x38,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x39,
    0x29,0x29,0x20,0x2b,0x20,0x28,0x28,0x5f,0x33,0x31,0x38,0x20,0x2a,0x20,0x6c,0x69,
    0x67,0x68,0x74,0x32,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x2e,0x78,
    0x79,0x7a,0x29,0x20,0x2a,0x20,0x5f,0x34,0x30,0x33,0x29,0x29,0x20,0x2a,0x20,0x5f,
    0x34,0x32,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,
    0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x33,0x20,0x5f,0x34,0x35,0x36,0x20,0x3d,0x20,0x74,0x6f,0x6e,0x65,
    0x6d,0x61,0x70,0x5f,0x72,0x65,0x69,0x6e,0x68,0x61,0x72,0x64,0x28,0x74,0x6f,0x74,
    0x61,0x6c,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x74,0x6f,0x74,0x61,0x6c,0x20,0x3d,
    0x20,0x5f,0x34,0x35,0x36,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x46,0x72,
    0x61,0x67,0x44,0x61,0x74,0x61,0x5b,0x30,0x5d,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,
    0x28,0x5f,0x34,0x35,0x36,0x2c,0x20,0x5f,0x33,0x30,0x38,0x2e,0x77,0x29,0x3b,0x0a,
    0x7d,0x0a,0x0a,0x00,
};
/*
    #version 100
    
    uniform vec4 vs_skybox_params[4];
    varying vec3 vTexCoord;
    attribute vec3 aPosition;
    attribute vec3 aNormal;
    attribute vec2 aTexCoord;
    attribute vec4 aColorMult;
    attribute vec4 aColorOffset;
    
    void main()
    {
        vTexCoord = aPosition.xzy;
        gl_Position = (mat4(vs_skybox_params[0], vs_skybox_params[1], vs_skybox_params[2], vs_skybox_params[3]) * vec4(aPosition, 1.0)).xyww;
    }
    
*/
static const char vs_skybox_source_glsl100[392] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x31,0x30,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x73,0x5f,0x73,0x6b,
    0x79,0x62,0x6f,0x78,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x34,0x5d,0x3b,0x0a,
    0x76,0x61,0x72,0x79,0x69,0x6e,0x67,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x54,0x65,
    0x78,0x43,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,
    0x65,0x20,0x76,0x65,0x63,0x33,0x20,0x61,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x3b,0x0a,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x20,0x76,0x65,0x63,0x33,
    0x20,0x61,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x61,0x74,0x74,0x72,0x69,0x62,
    0x75,0x74,0x65,0x20,0x76,0x65,0x63,0x32,0x20,0x61,0x54,0x65,0x78,0x43,0x6f,0x6f,
    0x72,0x64,0x3b,0x0a,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x20,0x76,0x65,
    0x63,0x34,0x20,0x61,0x43,0x6f,0x6c,0x6f,0x72,0x4d,0x75,0x6c,0x74,0x3b,0x0a,0x61,
    0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x20,0x76,0x65,0x63,0x34,0x20,0x61,0x43,
    0x6f,0x6c,0x6f,0x72,0x4f,0x66,0x66,0x73,0x65,0x74,0x3b,0x0a,0x0a,0x76,0x6f,0x69,
    0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,
    0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x20,0x3d,0x20,0x61,0x50,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x2e,0x78,0x7a,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,
    0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x28,0x6d,0x61,0x74,
    0x34,0x28,0x76,0x73,0x5f,0x73,0x6b,0x79,0x62,0x6f,0x78,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x30,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x73,0x6b,0x79,0x62,0x6f,0x78,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x73,
    0x6b,0x79,0x62,0x6f,0x78,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x2c,
    0x20,0x76,0x73,0x5f,0x73,0x6b,0x79,0x62,0x6f,0x78,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x33,0x5d,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x61,0x50,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,0x2e,0x30,0x29,0x29,0x2e,0x78,0x79,
    0x77,0x77,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 100
    precision mediump float;
    precision highp int;
    
    uniform highp samplerCube imageSkybox;
    
    varying highp vec3 vTexCoord;
    
    void main()
    {
        gl_FragData[0] = textureCube(imageSkybox, vTexCoord);
    }
    
*/
static const char fs_skybox_source_glsl100[207] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x31,0x30,0x30,0x0a,0x70,0x72,0x65,
    0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,0x6d,0x65,0x64,0x69,0x75,0x6d,0x70,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x3b,0x0a,0x70,0x72,0x65,0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x69,0x6e,0x74,0x3b,0x0a,0x0a,0x75,0x6e,0x69,0x66,
    0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,
    0x72,0x43,0x75,0x62,0x65,0x20,0x69,0x6d,0x61,0x67,0x65,0x53,0x6b,0x79,0x62,0x6f,
    0x78,0x3b,0x0a,0x0a,0x76,0x61,0x72,0x79,0x69,0x6e,0x67,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,
    0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x46,0x72,0x61,0x67,0x44,0x61,0x74,0x61,
    0x5b,0x30,0x5d,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x43,0x75,0x62,
    0x65,0x28,0x69,0x6d,0x61,0x67,0x65,0x53,0x6b,0x79,0x62,0x6f,0x78,0x2c,0x20,0x76,
    0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 300 es
    
    uniform vec4 vs_shadow_map_params[4];
    layout(location = 0) in vec3 aPosition;
    out vec2 projZW;
    layout(location = 1) in vec3 aNormal;
    layout(location = 2) in vec2 aTexCoord;
    layout(location = 3) in vec4 aColorMult;
    layout(location = 4) in vec4 aColorOffset;
    
    void main()
    {
        gl_Position = mat4(vs_shadow_map_params[0], vs_shadow_map_params[1], vs_shadow_map_params[2], vs_shadow_map_params[3]) * vec4(aPosition, 1.0);
        projZW = gl_Position.zw;
    }
    
*/
static const char vs_shadow_map_source_glsl300es[469] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x73,
    0x5f,0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,0x6d,0x61,0x70,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x34,0x5d,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,
    0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,
    0x65,0x63,0x33,0x20,0x61,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x6f,
    0x75,0x74,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x72,0x6f,0x6a,0x5a,0x57,0x3b,0x0a,
    0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x61,0x4e,0x6f,
    0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,
    0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x32,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,
    0x63,0x32,0x20,0x61,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x33,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x34,0x20,0x61,0x43,0x6f,0x6c,0x6f,
    0x72,0x4d,0x75,0x6c,0x74,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,
    0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x34,0x29,0x20,0x69,0x6e,0x20,0x76,
    0x65,0x63,0x34,0x20,0x61,0x43,0x6f,0x6c,0x6f,0x72,0x4f,0x66,0x66,0x73,0x65,0x74,
    0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x76,0x73,0x5f,0x73,0x68,0x61,0x64,0x6f,
    0x77,0x5f,0x6d,0x61,0x70,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2c,
    0x20,0x76,0x73,0x5f,0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,0x6d,0x61,0x70,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x73,0x68,0x61,
    0x64,0x6f,0x77,0x5f,0x6d,0x61,0x70,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,
    0x5d,0x2c,0x20,0x76,0x73,0x5f,0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,0x6d,0x61,0x70,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,0x29,0x20,0x2a,0x20,0x76,0x65,
    0x63,0x34,0x28,0x61,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,0x2e,
    0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x70,0x72,0x6f,0x6a,0x5a,0x57,0x20,0x3d,
    0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2e,0x7a,0x77,0x3b,
    0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 300 es
    precision mediump float;
    precision highp int;
    
    in highp vec2 projZW;
    layout(location = 0) out highp vec4 fragColor;
    
    highp vec4 encodeDepth(highp float v)
    {
        highp vec4 _24 = fract(vec4(1.0, 255.0, 65025.0, 16581375.0) * v);
        return _24 - (_24.yzww * vec4(0.0039215688593685626983642578125, 0.0039215688593685626983642578125, 0.0039215688593685626983642578125, 0.0));
    }
    
    void main()
    {
        highp float param = projZW.x / projZW.y;
        fragColor = encodeDepth(param);
    }
    
*/
static const char fs_shadow_map_source_glsl300es[492] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x70,0x72,0x65,0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,0x6d,0x65,0x64,0x69,0x75,0x6d,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x3b,0x0a,0x70,0x72,0x65,0x63,0x69,0x73,0x69,
    0x6f,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x69,0x6e,0x74,0x3b,0x0a,0x0a,0x69,
    0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x72,0x6f,
    0x6a,0x5a,0x57,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,
    0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x66,0x72,0x61,0x67,0x43,0x6f,0x6c,
    0x6f,0x72,0x3b,0x0a,0x0a,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,
    0x65,0x6e,0x63,0x6f,0x64,0x65,0x44,0x65,0x70,0x74,0x68,0x28,0x68,0x69,0x67,0x68,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x76,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x32,0x34,0x20,
    0x3d,0x20,0x66,0x72,0x61,0x63,0x74,0x28,0x76,0x65,0x63,0x34,0x28,0x31,0x2e,0x30,
    0x2c,0x20,0x32,0x35,0x35,0x2e,0x30,0x2c,0x20,0x36,0x35,0x30,0x32,0x35,0x2e,0x30,
    0x2c,0x20,0x31,0x36,0x35,0x38,0x31,0x33,0x37,0x35,0x2e,0x30,0x29,0x20,0x2a,0x20,
    0x76,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x5f,
    0x32,0x34,0x20,0x2d,0x20,0x28,0x5f,0x32,0x34,0x2e,0x79,0x7a,0x77,0x77,0x20,0x2a,
    0x20,0x76,0x65,0x63,0x34,0x28,0x30,0x2e,0x30,0x30,0x33,0x39,0x32,0x31,0x35,0x36,
    0x38,0x38,0x35,0x39,0x33,0x36,0x38,0x35,0x36,0x32,0x36,0x39,0x38,0x33,0x36,0x34,
    0x32,0x35,0x37,0x38,0x31,0x32,0x35,0x2c,0x20,0x30,0x2e,0x30,0x30,0x33,0x39,0x32,
    0x31,0x35,0x36,0x38,0x38,0x35,0x39,0x33,0x36,0x38,0x35,0x36,0x32,0x36,0x39,0x38,
    0x33,0x36,0x34,0x32,0x35,0x37,0x38,0x31,0x32,0x35,0x2c,0x20,0x30,0x2e,0x30,0x30,
    0x33,0x39,0x32,0x31,0x35,0x36,0x38,0x38,0x35,0x39,0x33,0x36,0x38,0x35,0x36,0x32,
    0x36,0x39,0x38,0x33,0x36,0x34,0x32,0x35,0x37,0x38,0x31,0x32,0x35,0x2c,0x20,0x30,
    0x2e,0x30,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,
    0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x70,
    0x72,0x6f,0x6a,0x5a,0x57,0x2e,0x78,0x20,0x2f,0x20,0x70,0x72,0x6f,0x6a,0x5a,0x57,
    0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,
    0x72,0x20,0x3d,0x20,0x65,0x6e,0x63,0x6f,0x64,0x65,0x44,0x65,0x70,0x74,0x68,0x28,
    0x70,0x61,0x72,0x61,0x6d,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 300 es
    
    uniform vec4 vs_params[16];
    out vec3 vNormal;
    layout(location = 0) in vec3 aPosition;
    out vec3 vFragPos;
    out vec2 vTexCoord;
    layout(location = 2) in vec2 aTexCoord;
    out vec4 vColorMult;
    layout(location = 3) in vec4 aColorMult;
    out vec4 vColorOffset;
    layout(location = 4) in vec4 aColorOffset;
    out vec4 v_shadow_pos;
    layout(location = 1) in vec3 aNormal;
    
    void main()
    {
        vec4 _28 = vec4(aPosition, 1.0);
        vNormal = vec3(normalize(mat4(vs_params[8], vs_params[9], vs_params[10], vs_params[11]) * _28).xyz);
        mat4 _38 = mat4(vs_params[4], vs_params[5], vs_params[6], vs_params[7]);
        vFragPos = mat3(_38[0].xyz, _38[1].xyz, _38[2].xyz) * aPosition;
        vTexCoord = aTexCoord;
        vColorMult = aColorMult;
        vColorOffset = aColorOffset;
        v_shadow_pos = mat4(vs_params[12], vs_params[13], vs_params[14], vs_params[15]) * _28;
        gl_Position = mat4(vs_params[0], vs_params[1], vs_params[2], vs_params[3]) * _28;
    }
    
*/
static const char vs_source_glsl300es[944] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x36,0x5d,0x3b,0x0a,0x6f,0x75,0x74,
    0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x6c,
    0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x61,0x50,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x33,0x20,
    0x76,0x46,0x72,0x61,0x67,0x50,0x6f,0x73,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,
    0x63,0x32,0x20,0x76,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x32,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x61,0x54,0x65,0x78,0x43,
    0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x76,
    0x43,0x6f,0x6c,0x6f,0x72,0x4d,0x75,0x6c,0x74,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,
    0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x33,0x29,0x20,
    0x69,0x6e,0x20,0x76,0x65,0x63,0x34,0x20,0x61,0x43,0x6f,0x6c,0x6f,0x72,0x4d,0x75,
    0x6c,0x74,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x43,0x6f,
    0x6c,0x6f,0x72,0x4f,0x66,0x66,0x73,0x65,0x74,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,
    0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x34,0x29,0x20,
    0x69,0x6e,0x20,0x76,0x65,0x63,0x34,0x20,0x61,0x43,0x6f,0x6c,0x6f,0x72,0x4f,0x66,
    0x66,0x73,0x65,0x74,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x76,
    0x5f,0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,0x70,0x6f,0x73,0x3b,0x0a,0x6c,0x61,0x79,
    0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,
    0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x61,0x4e,0x6f,0x72,0x6d,0x61,
    0x6c,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x32,0x38,0x20,0x3d,
    0x20,0x76,0x65,0x63,0x34,0x28,0x61,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,
    0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x4e,0x6f,0x72,0x6d,
    0x61,0x6c,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x69,0x7a,0x65,0x28,0x6d,0x61,0x74,0x34,0x28,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x38,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x5b,0x39,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,
    0x30,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x31,
    0x5d,0x29,0x20,0x2a,0x20,0x5f,0x32,0x38,0x29,0x2e,0x78,0x79,0x7a,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x6d,0x61,0x74,0x34,0x20,0x5f,0x33,0x38,0x20,0x3d,0x20,0x6d,
    0x61,0x74,0x34,0x28,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x34,0x5d,
    0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x35,0x5d,0x2c,0x20,
    0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x36,0x5d,0x2c,0x20,0x76,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x37,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x76,0x46,0x72,0x61,0x67,0x50,0x6f,0x73,0x20,0x3d,0x20,0x6d,0x61,0x74,0x33,
    0x28,0x5f,0x33,0x38,0x5b,0x30,0x5d,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x5f,0x33,0x38,
    0x5b,0x31,0x5d,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x5f,0x33,0x38,0x5b,0x32,0x5d,0x2e,
    0x78,0x79,0x7a,0x29,0x20,0x2a,0x20,0x61,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x20,
    0x3d,0x20,0x61,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x76,0x43,0x6f,0x6c,0x6f,0x72,0x4d,0x75,0x6c,0x74,0x20,0x3d,0x20,0x61,0x43,
    0x6f,0x6c,0x6f,0x72,0x4d,0x75,0x6c,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x43,
    0x6f,0x6c,0x6f,0x72,0x4f,0x66,0x66,0x73,0x65,0x74,0x20,0x3d,0x20,0x61,0x43,0x6f,
    0x6c,0x6f,0x72,0x4f,0x66,0x66,0x73,0x65,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,
    0x5f,0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,0x70,0x6f,0x73,0x20,0x3d,0x20,0x6d,0x61,
    0x74,0x34,0x28,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x32,0x5d,
    0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x33,0x5d,0x2c,
    0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x34,0x5d,0x2c,0x20,
    0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x35,0x5d,0x29,0x20,0x2a,
    0x20,0x5f,0x32,0x38,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x76,0x73,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x32,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x5b,0x33,0x5d,0x29,0x20,0x2a,0x20,0x5f,0x32,0x38,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,

};
/*
    #version 300 es
    precision mediump float;
    precision highp int;
    
    uniform highp vec4 material_params[5];
    uniform highp vec4 fs_params[3];
    uniform highp vec4 light_params[4];
    uniform highp vec4 light2_params[4];
    uniform highp sampler2D u_image_shadow_map;
    uniform highp sampler2D uImage0;
    
    in highp vec4 v_shadow_pos;
    in highp vec3 vNormal;
    in highp vec3 vFragPos;
    in highp vec2 vTexCoord;
    in highp vec4 vColorMult;
    layout(location = 0) out highp vec4 frag_color;
    in highp vec4 vColorOffset;
    
    highp float oren_nayar_diffuse(highp vec3 light_direction, highp vec3 view_direction, highp vec3 surface_normal, highp float roughness, highp float albedo)
    {
        highp float _213 = dot(light_direction, surface_normal);
        highp float _217 = dot(surface_normal, view_direction);
        highp float _223 = dot(light_direction, view_direction) - (_213 * _217);
        highp float _234 = roughness * roughness;
        return ((albedo * max(0.0, _213)) * ((1.0 + (_234 * ((albedo / (_234 + 0.12999999523162841796875)) + (0.5 / (_234 + 0.3300000131130218505859375))))) + ((((0.449999988079071044921875 * _234) / (_234 + 0.0900000035762786865234375)) * _223) / mix(1.0, max(_213, _217), step(0.0, _223))))) * 0.3183098733425140380859375;
    }
    
    highp float lambert_diffuse(highp vec3 light_direction, highp vec3 normal)
    {
        return dot(normal, light_direction);
    }
    
    highp float decodeDepth(highp vec4 rgba)
    {
        return dot(rgba, vec4(1.0, 0.0039215688593685626983642578125, 1.5378700481960549950599670410156e-05, 6.0308629201699659461155533790588e-08));
    }
    
    highp float calc_shadow(highp float cos_theta)
    {
        highp vec3 _168 = v_shadow_pos.xyz / vec3(v_shadow_pos.w);
        highp vec4 param = texture(u_image_shadow_map, (_168.xy * 0.5) + vec2(0.5));
        return step(decodeDepth(param), _168.z - (0.5 * clamp(0.004999999888241291046142578125 * tan(acos(cos_theta)), 0.0, 0.00999999977648258209228515625)));
    }
    
    highp float calc_spec(highp vec3 light_dir, highp vec3 view_dir, highp vec3 normal)
    {
        return ((8.0 + material_params[3].w) * 0.0397887341678142547607421875) * pow(max(dot(normal, normalize(light_dir + view_dir)), 0.0), material_params[3].w);
    }
    
    highp float attenuation_point(highp vec3 distance_by_radius, highp float falloff)
    {
        return pow(1.0 - min(1.0, length(distance_by_radius)), 2.0 * falloff);
    }
    
    highp float luminance(highp vec3 linear)
    {
        return dot(linear, vec3(0.2125999927520751953125, 0.715200006961822509765625, 0.072200000286102294921875));
    }
    
    highp vec3 linear_to_gamma(highp vec3 x)
    {
        return pow(x, vec3(0.4545454680919647216796875));
    }
    
    highp vec3 tonemap_reinhard(highp vec3 x)
    {
        highp vec3 param = x;
        highp vec3 param_1 = x / vec3(1.0 + luminance(param));
        return linear_to_gamma(param_1);
    }
    
    void main()
    {
        highp vec3 _282 = normalize(vNormal);
        highp vec3 _294 = normalize(fs_params[2].xyz - vFragPos);
        highp vec3 total = material_params[3].xyz;
        highp vec4 _305 = texture(uImage0, vTexCoord);
        highp vec4 _308 = _305 * vColorMult;
        highp vec3 _318 = vec3(_308.xyz) * material_params[1].xyz;
        highp vec3 param = light_params[0].xyz;
        highp vec3 param_1 = _294;
        highp vec3 param_2 = _282;
        highp float param_3 = 0.5;
        highp float param_4 = 1.0;
        highp float _333 = oren_nayar_diffuse(param, param_1, param_2, param_3, param_4);
        total += (material_params[0].xyz * light_params[1].xyz);
        if (_333 > 0.0)
        {
            highp vec3 param_5 = light_params[0].xyz;
            highp vec3 param_6 = _282;
            highp vec3 param_7 = light_params[0].xyz;
            highp vec3 param_8 = _294;
            highp vec3 param_9 = _282;
            total += ((((material_params[2].xyz * light_params[3].xyz) * calc_spec(param_7, param_8, param_9)) + ((_318 * light_params[2].xyz) * _333)) * (1.0 - calc_shadow(clamp(lambert_diffuse(param_5, param_6), 0.0, 1.0))));
        }
        highp vec3 _385 = light2_params[0].xyz - vFragPos;
        highp vec3 _393 = _385 / vec3(length(_385));
        highp vec3 param_10 = _393;
        highp vec3 param_11 = _294;
        highp vec3 param_12 = _282;
        highp float param_13 = 0.5;
        highp float param_14 = 1.0;
        highp float _403 = oren_nayar_diffuse(param_10, param_11, param_12, param_13, param_14);
        total += (material_params[0].xyz * light2_params[1].xyz);
        if (_403 > 0.0)
        {
            highp vec3 param_15 = _385 / vec3(light2_params[0].w);
            highp float param_16 = light2_params[1].w;
            highp float _425 = attenuation_point(param_15, param_16);
            if (_425 > 0.0)
            {
                highp vec3 param_17 = _393;
                highp vec3 param_18 = _294;
                highp vec3 param_19 = _282;
                total += ((((material_params[2].xyz * light2_params[3].xyz) * calc_spec(param_17, param_18, param_19)) + ((_318 * light2_params[2].xyz) * _403)) * _425);
            }
        }
        highp vec3 _456 = tonemap_reinhard(total);
        total = _456;
        frag_color = vec4(_456, _308.w);
    }
    
*/
static const char fs_source_glsl300es[4881] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x70,0x72,0x65,0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,0x6d,0x65,0x64,0x69,0x75,0x6d,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x3b,0x0a,0x70,0x72,0x65,0x63,0x69,0x73,0x69,
    0x6f,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x69,0x6e,0x74,0x3b,0x0a,0x0a,0x75,
    0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x34,0x20,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x35,0x5d,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x33,0x5d,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x34,0x5d,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,
    0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x6c,0x69,
    0x67,0x68,0x74,0x32,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x34,0x5d,0x3b,0x0a,
    0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x73,0x61,
    0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x75,0x5f,0x69,0x6d,0x61,0x67,0x65,0x5f,
    0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,0x6d,0x61,0x70,0x3b,0x0a,0x75,0x6e,0x69,0x66,
    0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,
    0x72,0x32,0x44,0x20,0x75,0x49,0x6d,0x61,0x67,0x65,0x30,0x3b,0x0a,0x0a,0x69,0x6e,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x5f,0x73,0x68,
    0x61,0x64,0x6f,0x77,0x5f,0x70,0x6f,0x73,0x3b,0x0a,0x69,0x6e,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,
    0x0a,0x69,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x76,
    0x46,0x72,0x61,0x67,0x50,0x6f,0x73,0x3b,0x0a,0x69,0x6e,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x76,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,
    0x3b,0x0a,0x69,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,
    0x76,0x43,0x6f,0x6c,0x6f,0x72,0x4d,0x75,0x6c,0x74,0x3b,0x0a,0x6c,0x61,0x79,0x6f,
    0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,
    0x20,0x6f,0x75,0x74,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,
    0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x69,0x6e,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x43,0x6f,0x6c,0x6f,0x72,
    0x4f,0x66,0x66,0x73,0x65,0x74,0x3b,0x0a,0x0a,0x68,0x69,0x67,0x68,0x70,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x6f,0x72,0x65,0x6e,0x5f,0x6e,0x61,0x79,0x61,0x72,0x5f,
    0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x28,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x33,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x65,0x63,0x74,0x69,
    0x6f,0x6e,0x2c,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x76,
    0x69,0x65,0x77,0x5f,0x64,0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x73,0x75,0x72,0x66,0x61,0x63,
    0x65,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x2c,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x61,0x6c,0x62,
    0x65,0x64,0x6f,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x31,0x33,0x20,0x3d,0x20,0x64,0x6f,
    0x74,0x28,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x65,0x63,0x74,0x69,0x6f,
    0x6e,0x2c,0x20,0x73,0x75,0x72,0x66,0x61,0x63,0x65,0x5f,0x6e,0x6f,0x72,0x6d,0x61,
    0x6c,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x5f,0x32,0x31,0x37,0x20,0x3d,0x20,0x64,0x6f,0x74,0x28,0x73,
    0x75,0x72,0x66,0x61,0x63,0x65,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x76,
    0x69,0x65,0x77,0x5f,0x64,0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x5f,0x32,0x32,0x33,0x20,0x3d,0x20,0x64,0x6f,0x74,0x28,0x6c,0x69,0x67,0x68,0x74,
    0x5f,0x64,0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x76,0x69,0x65,0x77,
    0x5f,0x64,0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x29,0x20,0x2d,0x20,0x28,0x5f,
    0x32,0x31,0x33,0x20,0x2a,0x20,0x5f,0x32,0x31,0x37,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x33,
    0x34,0x20,0x3d,0x20,0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x20,0x2a,0x20,
    0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,
    0x65,0x74,0x75,0x72,0x6e,0x20,0x28,0x28,0x61,0x6c,0x62,0x65,0x64,0x6f,0x20,0x2a,
    0x20,0x6d,0x61,0x78,0x28,0x30,0x2e,0x30,0x2c,0x20,0x5f,0x32,0x31,0x33,0x29,0x29,
    0x20,0x2a,0x20,0x28,0x28,0x31,0x2e,0x30,0x20,0x2b,0x20,0x28,0x5f,0x32,0x33,0x34,
    0x20,0x2a,0x20,0x28,0x28,0x61,0x6c,0x62,0x65,0x64,0x6f,0x20,0x2f,0x20,0x28,0x5f,
    0x32,0x33,0x34,0x20,0x2b,0x20,0x30,0x2e,0x31,0x32,0x39,0x39,0x39,0x39,0x39,0x39,
    0x35,0x32,0x33,0x31,0x36,0x32,0x38,0x34,0x31,0x37,0x39,0x36,0x38,0x37,0x35,0x29,
    0x29,0x20,0x2b,0x20,0x28,0x30,0x2e,0x35,0x20,0x2f,0x20,0x28,0x5f,0x32,0x33,0x34,
    0x20,0x2b,0x20,0x30,0x2e,0x33,0x33,0x30,0x30,0x30,0x30,0x30,0x31,0x33,0x31,0x31,
    0x33,0x30,0x32,0x31,0x38,0x35,0x30,0x35,0x38,0x35,0x39,0x33,0x37,0x35,0x29,0x29,
    0x29,0x29,0x29,0x20,0x2b,0x20,0x28,0x28,0x28,0x28,0x30,0x2e,0x34,0x34,0x39,0x39,
    0x39,0x39,0x39,0x38,0x38,0x30,0x37,0x39,0x30,0x37,0x31,0x30,0x34,0x34,0x39,0x32,
    0x31,0x38,0x37,0x35,0x20,0x2a,0x20,0x5f,0x32,0x33,0x34,0x29,0x20,0x2f,0x20,0x28,
    0x5f,0x32,0x33,0x34,0x20,0x2b,0x20,0x30,0x2e,0x30,0x39,0x30,0x30,0x30,0x30,0x30,
    0x30,0x33,0x35,0x37,0x36,0x32,0x37,0x38,0x36,0x38,0x36,0x35,0x32,0x33,0x34,0x33,
    0x37,0x35,0x29,0x29,0x20,0x2a,0x20,0x5f,0x32,0x32,0x33,0x29,0x20,0x2f,0x20,0x6d,
    0x69,0x78,0x28,0x31,0x2e,0x30,0x2c,0x20,0x6d,0x61,0x78,0x28,0x5f,0x32,0x31,0x33,
    0x2c,0x20,0x5f,0x32,0x31,0x37,0x29,0x2c,0x20,0x73,0x74,0x65,0x70,0x28,0x30,0x2e,
    0x30,0x2c,0x20,0x5f,0x32,0x32,0x33,0x29,0x29,0x29,0x29,0x29,0x20,0x2a,0x20,0x30,
    0x2e,0x33,0x31,0x38,0x33,0x30,0x39,0x38,0x37,0x33,0x33,0x34,0x32,0x35,0x31,0x34,
    0x30,0x33,0x38,0x30,0x38,0x35,0x39,0x33,0x37,0x35,0x3b,0x0a,0x7d,0x0a,0x0a,0x68,
    0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x6c,0x61,0x6d,0x62,0x65,
    0x72,0x74,0x5f,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x28,0x68,0x69,0x67,0x68,0x70,
    0x20,0x76,0x65,0x63,0x33,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x65,
    0x63,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x33,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x64,0x6f,0x74,0x28,0x6e,0x6f,0x72,0x6d,0x61,
    0x6c,0x2c,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x65,0x63,0x74,0x69,
    0x6f,0x6e,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x64,0x65,0x63,0x6f,0x64,0x65,0x44,0x65,0x70,0x74,0x68,0x28,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x72,0x67,0x62,0x61,0x29,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x64,0x6f,
    0x74,0x28,0x72,0x67,0x62,0x61,0x2c,0x20,0x76,0x65,0x63,0x34,0x28,0x31,0x2e,0x30,
    0x2c,0x20,0x30,0x2e,0x30,0x30,0x33,0x39,0x32,0x31,0x35,0x36,0x38,0x38,0x35,0x39,
    0x33,0x36,0x38,0x35,0x36,0x32,0x36,0x39,0x38,0x33,0x36,0x34,0x32,0x35,0x37,0x38,
    0x31,0x32,0x35,0x2c,0x20,0x31,0x2e,0x35,0x33,0x37,0x38,0x37,0x30,0x30,0x34,0x38,
    0x31,0x39,0x36,0x30,0x35,0x34,0x39,0x39,0x35,0x30,0x35,0x39,0x39,0x36,0x37,0x30,
    0x34,0x31,0x30,0x31,0x35,0x36,0x65,0x2d,0x30,0x35,0x2c,0x20,0x36,0x2e,0x30,0x33,
    0x30,0x38,0x36,0x32,0x39,0x32,0x30,0x31,0x36,0x39,0x39,0x36,0x35,0x39,0x34,0x36,
    0x31,0x31,0x35,0x35,0x35,0x33,0x33,0x37,0x39,0x30,0x35,0x38,0x38,0x65,0x2d,0x30,
    0x38,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x63,0x61,0x6c,0x63,0x5f,0x73,0x68,0x61,0x64,0x6f,0x77,0x28,
    0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x63,0x6f,0x73,0x5f,
    0x74,0x68,0x65,0x74,0x61,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x31,0x36,0x38,0x20,0x3d,0x20,0x76,
    0x5f,0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,0x70,0x6f,0x73,0x2e,0x78,0x79,0x7a,0x20,
    0x2f,0x20,0x76,0x65,0x63,0x33,0x28,0x76,0x5f,0x73,0x68,0x61,0x64,0x6f,0x77,0x5f,
    0x70,0x6f,0x73,0x2e,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x74,
    0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x75,0x5f,0x69,0x6d,0x61,0x67,0x65,0x5f,0x73,
    0x68,0x61,0x64,0x6f,0x77,0x5f,0x6d,0x61,0x70,0x2c,0x20,0x28,0x5f,0x31,0x36,0x38,
    0x2e,0x78,0x79,0x20,0x2a,0x20,0x30,0x2e,0x35,0x29,0x20,0x2b,0x20,0x76,0x65,0x63,
    0x32,0x28,0x30,0x2e,0x35,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,
    0x75,0x72,0x6e,0x20,0x73,0x74,0x65,0x70,0x28,0x64,0x65,0x63,0x6f,0x64,0x65,0x44,
    0x65,0x70,0x74,0x68,0x28,0x70,0x61,0x72,0x61,0x6d,0x29,0x2c,0x20,0x5f,0x31,0x36,
    0x38,0x2e,0x7a,0x20,0x2d,0x20,0x28,0x30,0x2e,0x35,0x20,0x2a,0x20,0x63,0x6c,0x61,
    0x6d,0x70,0x28,0x30,0x2e,0x30,0x30,0x34,0x39,0x39,0x39,0x39,0x39,0x39,0x38,0x38,
    0x38,0x32,0x34,0x31,0x32,0x39,0x31,0x30,0x34,0x36,0x31,0x34,0x32,0x35,0x37,0x38,
    0x31,0x32,0x35,0x20,0x2a,0x20,0x74,0x61,0x6e,0x28,0x61,0x63,0x6f,0x73,0x28,0x63,
    0x6f,0x73,0x5f,0x74,0x68,0x65,0x74,0x61,0x29,0x29,0x2c,0x20,0x30,0x2e,0x30,0x2c,
    0x20,0x30,0x2e,0x30,0x30,0x39,0x39,0x39,0x39,0x39,0x39,0x39,0x37,0x37,0x36,0x34,
    0x38,0x32,0x35,0x38,0x32,0x30,0x39,0x32,0x32,0x38,0x35,0x31,0x35,0x36,0x32,0x35,
    0x29,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x63,0x61,0x6c,0x63,0x5f,0x73,0x70,0x65,0x63,0x28,0x68,0x69,
    0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,
    0x69,0x72,0x2c,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x76,
    0x69,0x65,0x77,0x5f,0x64,0x69,0x72,0x2c,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x33,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x29,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x28,0x28,0x38,0x2e,0x30,0x20,0x2b,
    0x20,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x5b,0x33,0x5d,0x2e,0x77,0x29,0x20,0x2a,0x20,0x30,0x2e,0x30,0x33,0x39,0x37,0x38,
    0x38,0x37,0x33,0x34,0x31,0x36,0x37,0x38,0x31,0x34,0x32,0x35,0x34,0x37,0x36,0x30,
    0x37,0x34,0x32,0x31,0x38,0x37,0x35,0x29,0x20,0x2a,0x20,0x70,0x6f,0x77,0x28,0x6d,
    0x61,0x78,0x28,0x64,0x6f,0x74,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,
    0x69,0x72,0x20,0x2b,0x20,0x76,0x69,0x65,0x77,0x5f,0x64,0x69,0x72,0x29,0x29,0x2c,
    0x20,0x30,0x2e,0x30,0x29,0x2c,0x20,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,0x2e,0x77,0x29,0x3b,0x0a,0x7d,0x0a,
    0x0a,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x61,0x74,0x74,
    0x65,0x6e,0x75,0x61,0x74,0x69,0x6f,0x6e,0x5f,0x70,0x6f,0x69,0x6e,0x74,0x28,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x64,0x69,0x73,0x74,0x61,0x6e,
    0x63,0x65,0x5f,0x62,0x79,0x5f,0x72,0x61,0x64,0x69,0x75,0x73,0x2c,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x66,0x61,0x6c,0x6c,0x6f,0x66,
    0x66,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,
    0x70,0x6f,0x77,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x6d,0x69,0x6e,0x28,0x31,0x2e,
    0x30,0x2c,0x20,0x6c,0x65,0x6e,0x67,0x74,0x68,0x28,0x64,0x69,0x73,0x74,0x61,0x6e,
    0x63,0x65,0x5f,0x62,0x79,0x5f,0x72,0x61,0x64,0x69,0x75,0x73,0x29,0x29,0x2c,0x20,
    0x32,0x2e,0x30,0x20,0x2a,0x20,0x66,0x61,0x6c,0x6c,0x6f,0x66,0x66,0x29,0x3b,0x0a,
    0x7d,0x0a,0x0a,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x6c,
    0x75,0x6d,0x69,0x6e,0x61,0x6e,0x63,0x65,0x28,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x33,0x20,0x6c,0x69,0x6e,0x65,0x61,0x72,0x29,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x64,0x6f,0x74,0x28,0x6c,0x69,0x6e,
    0x65,0x61,0x72,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x32,0x31,0x32,0x35,
    0x39,0x39,0x39,0x39,0x32,0x37,0x35,0x32,0x30,0x37,0x35,0x31,0x39,0x35,0x33,0x31,
    0x32,0x35,0x2c,0x20,0x30,0x2e,0x37,0x31,0x35,0x32,0x30,0x30,0x30,0x30,0x36,0x39,
    0x36,0x31,0x38,0x32,0x32,0x35,0x30,0x39,0x37,0x36,0x35,0x36,0x32,0x35,0x2c,0x20,
    0x30,0x2e,0x30,0x37,0x32,0x32,0x30,0x30,0x30,0x30,0x30,0x32,0x38,0x36,0x31,0x30,
    0x32,0x32,0x39,0x34,0x39,0x32,0x31,0x38,0x37,0x35,0x29,0x29,0x3b,0x0a,0x7d,0x0a,
    0x0a,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x6c,0x69,0x6e,0x65,
    0x61,0x72,0x5f,0x74,0x6f,0x5f,0x67,0x61,0x6d,0x6d,0x61,0x28,0x68,0x69,0x67,0x68,
    0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x78,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x70,0x6f,0x77,0x28,0x78,0x2c,0x20,0x76,0x65,
    0x63,0x33,0x28,0x30,0x2e,0x34,0x35,0x34,0x35,0x34,0x35,0x34,0x36,0x38,0x30,0x39,
    0x31,0x39,0x36,0x34,0x37,0x32,0x31,0x36,0x37,0x39,0x36,0x38,0x37,0x35,0x29,0x29,
    0x3b,0x0a,0x7d,0x0a,0x0a,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,
    0x74,0x6f,0x6e,0x65,0x6d,0x61,0x70,0x5f,0x72,0x65,0x69,0x6e,0x68,0x61,0x72,0x64,
    0x28,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x78,0x29,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x31,0x20,0x3d,0x20,0x78,0x20,0x2f,0x20,0x76,0x65,0x63,0x33,0x28,0x31,0x2e,0x30,
    0x20,0x2b,0x20,0x6c,0x75,0x6d,0x69,0x6e,0x61,0x6e,0x63,0x65,0x28,0x70,0x61,0x72,
    0x61,0x6d,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,
    0x20,0x6c,0x69,0x6e,0x65,0x61,0x72,0x5f,0x74,0x6f,0x5f,0x67,0x61,0x6d,0x6d,0x61,
    0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x6f,
    0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x32,0x38,0x32,0x20,
    0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x76,0x4e,0x6f,0x72,
    0x6d,0x61,0x6c,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x33,0x20,0x5f,0x32,0x39,0x34,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,
    0x61,0x6c,0x69,0x7a,0x65,0x28,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x32,0x5d,0x2e,0x78,0x79,0x7a,0x20,0x2d,0x20,0x76,0x46,0x72,0x61,0x67,0x50,0x6f,
    0x73,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x33,0x20,0x74,0x6f,0x74,0x61,0x6c,0x20,0x3d,0x20,0x6d,0x61,0x74,0x65,0x72,
    0x69,0x61,0x6c,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,0x2e,0x78,0x79,
    0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x34,0x20,0x5f,0x33,0x30,0x35,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,
    0x28,0x75,0x49,0x6d,0x61,0x67,0x65,0x30,0x2c,0x20,0x76,0x54,0x65,0x78,0x43,0x6f,
    0x6f,0x72,0x64,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x34,0x20,0x5f,0x33,0x30,0x38,0x20,0x3d,0x20,0x5f,0x33,0x30,0x35,
    0x20,0x2a,0x20,0x76,0x43,0x6f,0x6c,0x6f,0x72,0x4d,0x75,0x6c,0x74,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x33,
    0x31,0x38,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x5f,0x33,0x30,0x38,0x2e,0x78,
    0x79,0x7a,0x29,0x20,0x2a,0x20,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x20,0x3d,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x30,0x5d,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,
    0x20,0x3d,0x20,0x5f,0x32,0x39,0x34,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,
    0x3d,0x20,0x5f,0x32,0x38,0x32,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x20,
    0x3d,0x20,0x30,0x2e,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x20,0x3d,
    0x20,0x31,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x33,0x33,0x33,0x20,0x3d,0x20,0x6f,0x72,0x65,
    0x6e,0x5f,0x6e,0x61,0x79,0x61,0x72,0x5f,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x28,
    0x70,0x61,0x72,0x61,0x6d,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x2c,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,
    0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x74,0x6f,0x74,0x61,0x6c,0x20,0x2b,0x3d,0x20,0x28,0x6d,0x61,0x74,0x65,0x72,0x69,
    0x61,0x6c,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x78,0x79,0x7a,
    0x20,0x2a,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x31,0x5d,0x2e,0x78,0x79,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,
    0x28,0x5f,0x33,0x33,0x33,0x20,0x3e,0x20,0x30,0x2e,0x30,0x29,0x0a,0x20,0x20,0x20,
    0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x20,0x3d,0x20,
    0x6c,0x69,0x67,0x68,0x74,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,
    0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x36,0x20,
    0x3d,0x20,0x5f,0x32,0x38,0x32,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x37,0x20,0x3d,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x30,0x5d,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x38,0x20,0x3d,0x20,0x5f,0x32,0x39,0x34,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x39,0x20,0x3d,0x20,0x5f,0x32,0x38,0x32,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x74,0x6f,0x74,0x61,0x6c,0x20,0x2b,0x3d,
    0x20,0x28,0x28,0x28,0x28,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x2e,0x78,0x79,0x7a,0x20,0x2a,0x20,0x6c,0x69,
    0x67,0x68,0x74,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,0x2e,0x78,0x79,
    0x7a,0x29,0x20,0x2a,0x20,0x63,0x61,0x6c,0x63,0x5f,0x73,0x70,0x65,0x63,0x28,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x37,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x38,0x2c,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x39,0x29,0x29,0x20,0x2b,0x20,0x28,0x28,0x5f,
    0x33,0x31,0x38,0x20,0x2a,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x32,0x5d,0x2e,0x78,0x79,0x7a,0x29,0x20,0x2a,0x20,0x5f,0x33,0x33,
    0x33,0x29,0x29,0x20,0x2a,0x20,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x63,0x61,0x6c,
    0x63,0x5f,0x73,0x68,0x61,0x64,0x6f,0x77,0x28,0x63,0x6c,0x61,0x6d,0x70,0x28,0x6c,
    0x61,0x6d,0x62,0x65,0x72,0x74,0x5f,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x28,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x35,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x36,0x29,
    0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x29,0x29,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x33,0x20,0x5f,0x33,0x38,0x35,0x20,0x3d,0x20,0x6c,0x69,0x67,0x68,
    0x74,0x32,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x78,0x79,0x7a,
    0x20,0x2d,0x20,0x76,0x46,0x72,0x61,0x67,0x50,0x6f,0x73,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x33,0x39,0x33,
    0x20,0x3d,0x20,0x5f,0x33,0x38,0x35,0x20,0x2f,0x20,0x76,0x65,0x63,0x33,0x28,0x6c,
    0x65,0x6e,0x67,0x74,0x68,0x28,0x5f,0x33,0x38,0x35,0x29,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x31,0x30,0x20,0x3d,0x20,0x5f,0x33,0x39,0x33,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x31,0x31,0x20,0x3d,0x20,0x5f,0x32,0x39,0x34,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x31,0x32,0x20,0x3d,0x20,0x5f,0x32,0x38,0x32,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x31,0x33,0x20,0x3d,0x20,0x30,0x2e,0x35,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x31,0x34,0x20,0x3d,0x20,0x31,0x2e,0x30,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x34,
    0x30,0x33,0x20,0x3d,0x20,0x6f,0x72,0x65,0x6e,0x5f,0x6e,0x61,0x79,0x61,0x72,0x5f,
    0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x30,
    0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x31,0x2c,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x31,0x32,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x33,0x2c,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x34,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x74,
    0x6f,0x74,0x61,0x6c,0x20,0x2b,0x3d,0x20,0x28,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,
    0x6c,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x78,0x79,0x7a,0x20,
    0x2a,0x20,0x6c,0x69,0x67,0x68,0x74,0x32,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x31,0x5d,0x2e,0x78,0x79,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,
    0x28,0x5f,0x34,0x30,0x33,0x20,0x3e,0x20,0x30,0x2e,0x30,0x29,0x0a,0x20,0x20,0x20,
    0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x35,0x20,0x3d,
    0x20,0x5f,0x33,0x38,0x35,0x20,0x2f,0x20,0x76,0x65,0x63,0x33,0x28,0x6c,0x69,0x67,
    0x68,0x74,0x32,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x77,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x36,0x20,0x3d,
    0x20,0x6c,0x69,0x67,0x68,0x74,0x32,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,
    0x5d,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x34,0x32,0x35,0x20,0x3d,0x20,
    0x61,0x74,0x74,0x65,0x6e,0x75,0x61,0x74,0x69,0x6f,0x6e,0x5f,0x70,0x6f,0x69,0x6e,
    0x74,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x35,0x2c,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x31,0x36,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,
    0x66,0x20,0x28,0x5f,0x34,0x32,0x35,0x20,0x3e,0x20,0x30,0x2e,0x30,0x29,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x37,0x20,0x3d,0x20,0x5f,0x33,0x39,0x33,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x38,
    0x20,0x3d,0x20,0x5f,0x32,0x39,0x34,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x39,0x20,0x3d,0x20,0x5f,0x32,0x38,0x32,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x74,0x6f,0x74,
    0x61,0x6c,0x20,0x2b,0x3d,0x20,0x28,0x28,0x28,0x28,0x6d,0x61,0x74,0x65,0x72,0x69,
    0x61,0x6c,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x2e,0x78,0x79,0x7a,
    0x20,0x2a,0x20,0x6c,0x69,0x67,0x68,0x74,0x32,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x5b,0x33,0x5d,0x2e,0x78,0x79,0x7a,0x29,0x20,0x2a,0x20,0x63,0x61,0x6c,0x63,0x5f,
    0x73,0x70,0x65,0x63,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x37,0x2c,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x31,0x38,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,
    0x39,0x29,0x29,0x20,0x2b,0x20,0x28,0x28,0x5f,0x33,0x31,0x38,0x20,0x2a,0x20,0x6c,
    0x69,0x67,0x68,0x74,0x32,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x2e,
    0x78,0x79,0x7a,0x29,0x20,0x2a,0x20,0x5f,0x34,0x30,0x33,0x29,0x29,0x20,0x2a,0x20,
    0x5f,0x34,0x32,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,
    0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x34,0x35,0x36,0x20,0x3d,0x20,0x74,0x6f,0x6e,
    0x65,0x6d,0x61,0x70,0x5f,0x72,0x65,0x69,0x6e,0x68,0x61,0x72,0x64,0x28,0x74,0x6f,
    0x74,0x61,0x6c,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x74,0x6f,0x74,0x61,0x6c,0x20,
    0x3d,0x20,0x5f,0x34,0x35,0x36,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,
    0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x5f,0x34,
    0x35,0x36,0x2c,0x20,0x5f,0x33,0x30,0x38,0x2e,0x77,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,
    0x00,
};
/*
    #version 300 es
    
    uniform vec4 vs_skybox_params[4];
    out vec3 vTexCoord;
    layout(location = 0) in vec3 aPosition;
    layout(location = 1) in vec3 aNormal;
    layout(location = 2) in vec2 aTexCoord;
    layout(location = 3) in vec4 aColorMult;
    layout(location = 4) in vec4 aColorOffset;
    
    void main()
    {
        vTexCoord = aPosition.xzy;
        gl_Position = (mat4(vs_skybox_params[0], vs_skybox_params[1], vs_skybox_params[2], vs_skybox_params[3]) * vec4(aPosition, 1.0)).xyww;
    }
    
*/
static const char vs_skybox_source_glsl300es[461] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x73,
    0x5f,0x73,0x6b,0x79,0x62,0x6f,0x78,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x34,
    0x5d,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x54,0x65,0x78,
    0x43,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,
    0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,
    0x65,0x63,0x33,0x20,0x61,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x6c,
    0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x61,0x4e,0x6f,0x72,
    0x6d,0x61,0x6c,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,
    0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x32,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,
    0x32,0x20,0x61,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x6c,0x61,0x79,
    0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x33,
    0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x34,0x20,0x61,0x43,0x6f,0x6c,0x6f,0x72,
    0x4d,0x75,0x6c,0x74,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,
    0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x34,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,
    0x63,0x34,0x20,0x61,0x43,0x6f,0x6c,0x6f,0x72,0x4f,0x66,0x66,0x73,0x65,0x74,0x3b,
    0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x76,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x20,0x3d,0x20,
    0x61,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2e,0x78,0x7a,0x79,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x28,0x6d,0x61,0x74,0x34,0x28,0x76,0x73,0x5f,0x73,0x6b,0x79,0x62,0x6f,0x78,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x73,
    0x6b,0x79,0x62,0x6f,0x78,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x2c,
    0x20,0x76,0x73,0x5f,0x73,0x6b,0x79,0x62,0x6f,0x78,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x32,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x73,0x6b,0x79,0x62,0x6f,0x78,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,
    0x34,0x28,0x61,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,0x2e,0x30,
    0x29,0x29,0x2e,0x78,0x79,0x77,0x77,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 300 es
    precision mediump float;
    precision highp int;
    
    uniform highp samplerCube imageSkybox;
    
    layout(location = 0) out highp vec4 fragColor;
    in highp vec3 vTexCoord;
    
    void main()
    {
        fragColor = texture(imageSkybox, vTexCoord);
    }
    
*/
static const char fs_skybox_source_glsl300es[243] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x70,0x72,0x65,0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,0x6d,0x65,0x64,0x69,0x75,0x6d,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x3b,0x0a,0x70,0x72,0x65,0x63,0x69,0x73,0x69,
    0x6f,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x69,0x6e,0x74,0x3b,0x0a,0x0a,0x75,
    0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x73,0x61,0x6d,
    0x70,0x6c,0x65,0x72,0x43,0x75,0x62,0x65,0x20,0x69,0x6d,0x61,0x67,0x65,0x53,0x6b,
    0x79,0x62,0x6f,0x78,0x3b,0x0a,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,
    0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x66,0x72,0x61,0x67,0x43,
    0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x69,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x33,0x20,0x76,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x0a,
    0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x74,0x65,
    0x78,0x74,0x75,0x72,0x65,0x28,0x69,0x6d,0x61,0x67,0x65,0x53,0x6b,0x79,0x62,0x6f,
    0x78,0x2c,0x20,0x76,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x29,0x3b,0x0a,0x7d,
    0x0a,0x0a,0x00,
};
#if !defined(SOKOL_GFX_INCLUDED)
  #error "Please include sokol_gfx.h before render3d_shader.h"
#endif
static inline const sg_shader_desc* render3d_shader_desc(void) {
  if (sg_query_backend() == SG_BACKEND_GLCORE33) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].name = "aPosition";
      desc.attrs[1].name = "aNormal";
      desc.attrs[2].name = "aTexCoord";
      desc.attrs[3].name = "aColorMult";
      desc.attrs[4].name = "aColorOffset";
      desc.vs.source = vs_source_glsl330;
      desc.vs.entry = "main";
      desc.vs.uniform_blocks[0].size = 256;
      desc.vs.uniform_blocks[0].uniforms[0].name = "vs_params";
      desc.vs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.vs.uniform_blocks[0].uniforms[0].array_count = 16;
      desc.fs.source = fs_source_glsl330;
      desc.fs.entry = "main";
      desc.fs.uniform_blocks[0].size = 80;
      desc.fs.uniform_blocks[0].uniforms[0].name = "material_params";
      desc.fs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.fs.uniform_blocks[0].uniforms[0].array_count = 5;
      desc.fs.uniform_blocks[1].size = 48;
      desc.fs.uniform_blocks[1].uniforms[0].name = "fs_params";
      desc.fs.uniform_blocks[1].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.fs.uniform_blocks[1].uniforms[0].array_count = 3;
      desc.fs.uniform_blocks[2].size = 64;
      desc.fs.uniform_blocks[2].uniforms[0].name = "light_params";
      desc.fs.uniform_blocks[2].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.fs.uniform_blocks[2].uniforms[0].array_count = 4;
      desc.fs.uniform_blocks[3].size = 64;
      desc.fs.uniform_blocks[3].uniforms[0].name = "light2_params";
      desc.fs.uniform_blocks[3].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.fs.uniform_blocks[3].uniforms[0].array_count = 4;
      desc.fs.images[0].name = "u_image_shadow_map";
      desc.fs.images[0].type = SG_IMAGETYPE_2D;
      desc.fs.images[0].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.fs.images[1].name = "uImage0";
      desc.fs.images[1].type = SG_IMAGETYPE_2D;
      desc.fs.images[1].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.label = "render3d_shader";
    };
    return &desc;
  }
  if (sg_query_backend() == SG_BACKEND_GLES2) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].name = "aPosition";
      desc.attrs[1].name = "aNormal";
      desc.attrs[2].name = "aTexCoord";
      desc.attrs[3].name = "aColorMult";
      desc.attrs[4].name = "aColorOffset";
      desc.vs.source = vs_source_glsl100;
      desc.vs.entry = "main";
      desc.vs.uniform_blocks[0].size = 256;
      desc.vs.uniform_blocks[0].uniforms[0].name = "vs_params";
      desc.vs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.vs.uniform_blocks[0].uniforms[0].array_count = 16;
      desc.fs.source = fs_source_glsl100;
      desc.fs.entry = "main";
      desc.fs.uniform_blocks[0].size = 80;
      desc.fs.uniform_blocks[0].uniforms[0].name = "material_params";
      desc.fs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.fs.uniform_blocks[0].uniforms[0].array_count = 5;
      desc.fs.uniform_blocks[1].size = 48;
      desc.fs.uniform_blocks[1].uniforms[0].name = "fs_params";
      desc.fs.uniform_blocks[1].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.fs.uniform_blocks[1].uniforms[0].array_count = 3;
      desc.fs.uniform_blocks[2].size = 64;
      desc.fs.uniform_blocks[2].uniforms[0].name = "light_params";
      desc.fs.uniform_blocks[2].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.fs.uniform_blocks[2].uniforms[0].array_count = 4;
      desc.fs.uniform_blocks[3].size = 64;
      desc.fs.uniform_blocks[3].uniforms[0].name = "light2_params";
      desc.fs.uniform_blocks[3].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.fs.uniform_blocks[3].uniforms[0].array_count = 4;
      desc.fs.images[0].name = "u_image_shadow_map";
      desc.fs.images[0].type = SG_IMAGETYPE_2D;
      desc.fs.images[0].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.fs.images[1].name = "uImage0";
      desc.fs.images[1].type = SG_IMAGETYPE_2D;
      desc.fs.images[1].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.label = "render3d_shader";
    };
    return &desc;
  }
  if (sg_query_backend() == SG_BACKEND_GLES3) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].name = "aPosition";
      desc.attrs[1].name = "aNormal";
      desc.attrs[2].name = "aTexCoord";
      desc.attrs[3].name = "aColorMult";
      desc.attrs[4].name = "aColorOffset";
      desc.vs.source = vs_source_glsl300es;
      desc.vs.entry = "main";
      desc.vs.uniform_blocks[0].size = 256;
      desc.vs.uniform_blocks[0].uniforms[0].name = "vs_params";
      desc.vs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.vs.uniform_blocks[0].uniforms[0].array_count = 16;
      desc.fs.source = fs_source_glsl300es;
      desc.fs.entry = "main";
      desc.fs.uniform_blocks[0].size = 80;
      desc.fs.uniform_blocks[0].uniforms[0].name = "material_params";
      desc.fs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.fs.uniform_blocks[0].uniforms[0].array_count = 5;
      desc.fs.uniform_blocks[1].size = 48;
      desc.fs.uniform_blocks[1].uniforms[0].name = "fs_params";
      desc.fs.uniform_blocks[1].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.fs.uniform_blocks[1].uniforms[0].array_count = 3;
      desc.fs.uniform_blocks[2].size = 64;
      desc.fs.uniform_blocks[2].uniforms[0].name = "light_params";
      desc.fs.uniform_blocks[2].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.fs.uniform_blocks[2].uniforms[0].array_count = 4;
      desc.fs.uniform_blocks[3].size = 64;
      desc.fs.uniform_blocks[3].uniforms[0].name = "light2_params";
      desc.fs.uniform_blocks[3].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.fs.uniform_blocks[3].uniforms[0].array_count = 4;
      desc.fs.images[0].name = "u_image_shadow_map";
      desc.fs.images[0].type = SG_IMAGETYPE_2D;
      desc.fs.images[0].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.fs.images[1].name = "uImage0";
      desc.fs.images[1].type = SG_IMAGETYPE_2D;
      desc.fs.images[1].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.label = "render3d_shader";
    };
    return &desc;
  }
  return 0;
}
static inline const sg_shader_desc* render3d_shadow_map_shader_desc(void) {
  if (sg_query_backend() == SG_BACKEND_GLCORE33) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].name = "aPosition";
      desc.attrs[1].name = "aNormal";
      desc.attrs[2].name = "aTexCoord";
      desc.attrs[3].name = "aColorMult";
      desc.attrs[4].name = "aColorOffset";
      desc.vs.source = vs_shadow_map_source_glsl330;
      desc.vs.entry = "main";
      desc.vs.uniform_blocks[0].size = 64;
      desc.vs.uniform_blocks[0].uniforms[0].name = "vs_shadow_map_params";
      desc.vs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.vs.uniform_blocks[0].uniforms[0].array_count = 4;
      desc.fs.source = fs_shadow_map_source_glsl330;
      desc.fs.entry = "main";
      desc.label = "render3d_shadow_map_shader";
    };
    return &desc;
  }
  if (sg_query_backend() == SG_BACKEND_GLES2) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].name = "aPosition";
      desc.attrs[1].name = "aNormal";
      desc.attrs[2].name = "aTexCoord";
      desc.attrs[3].name = "aColorMult";
      desc.attrs[4].name = "aColorOffset";
      desc.vs.source = vs_shadow_map_source_glsl100;
      desc.vs.entry = "main";
      desc.vs.uniform_blocks[0].size = 64;
      desc.vs.uniform_blocks[0].uniforms[0].name = "vs_shadow_map_params";
      desc.vs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.vs.uniform_blocks[0].uniforms[0].array_count = 4;
      desc.fs.source = fs_shadow_map_source_glsl100;
      desc.fs.entry = "main";
      desc.label = "render3d_shadow_map_shader";
    };
    return &desc;
  }
  if (sg_query_backend() == SG_BACKEND_GLES3) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].name = "aPosition";
      desc.attrs[1].name = "aNormal";
      desc.attrs[2].name = "aTexCoord";
      desc.attrs[3].name = "aColorMult";
      desc.attrs[4].name = "aColorOffset";
      desc.vs.source = vs_shadow_map_source_glsl300es;
      desc.vs.entry = "main";
      desc.vs.uniform_blocks[0].size = 64;
      desc.vs.uniform_blocks[0].uniforms[0].name = "vs_shadow_map_params";
      desc.vs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.vs.uniform_blocks[0].uniforms[0].array_count = 4;
      desc.fs.source = fs_shadow_map_source_glsl300es;
      desc.fs.entry = "main";
      desc.label = "render3d_shadow_map_shader";
    };
    return &desc;
  }
  return 0;
}
static inline const sg_shader_desc* render3d_skybox_shader_desc(void) {
  if (sg_query_backend() == SG_BACKEND_GLCORE33) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].name = "aPosition";
      desc.attrs[1].name = "aNormal";
      desc.attrs[2].name = "aTexCoord";
      desc.attrs[3].name = "aColorMult";
      desc.attrs[4].name = "aColorOffset";
      desc.vs.source = vs_skybox_source_glsl330;
      desc.vs.entry = "main";
      desc.vs.uniform_blocks[0].size = 64;
      desc.vs.uniform_blocks[0].uniforms[0].name = "vs_skybox_params";
      desc.vs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.vs.uniform_blocks[0].uniforms[0].array_count = 4;
      desc.fs.source = fs_skybox_source_glsl330;
      desc.fs.entry = "main";
      desc.fs.images[0].name = "imageSkybox";
      desc.fs.images[0].type = SG_IMAGETYPE_CUBE;
      desc.fs.images[0].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.label = "render3d_skybox_shader";
    };
    return &desc;
  }
  if (sg_query_backend() == SG_BACKEND_GLES2) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].name = "aPosition";
      desc.attrs[1].name = "aNormal";
      desc.attrs[2].name = "aTexCoord";
      desc.attrs[3].name = "aColorMult";
      desc.attrs[4].name = "aColorOffset";
      desc.vs.source = vs_skybox_source_glsl100;
      desc.vs.entry = "main";
      desc.vs.uniform_blocks[0].size = 64;
      desc.vs.uniform_blocks[0].uniforms[0].name = "vs_skybox_params";
      desc.vs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.vs.uniform_blocks[0].uniforms[0].array_count = 4;
      desc.fs.source = fs_skybox_source_glsl100;
      desc.fs.entry = "main";
      desc.fs.images[0].name = "imageSkybox";
      desc.fs.images[0].type = SG_IMAGETYPE_CUBE;
      desc.fs.images[0].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.label = "render3d_skybox_shader";
    };
    return &desc;
  }
  if (sg_query_backend() == SG_BACKEND_GLES3) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].name = "aPosition";
      desc.attrs[1].name = "aNormal";
      desc.attrs[2].name = "aTexCoord";
      desc.attrs[3].name = "aColorMult";
      desc.attrs[4].name = "aColorOffset";
      desc.vs.source = vs_skybox_source_glsl300es;
      desc.vs.entry = "main";
      desc.vs.uniform_blocks[0].size = 64;
      desc.vs.uniform_blocks[0].uniforms[0].name = "vs_skybox_params";
      desc.vs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.vs.uniform_blocks[0].uniforms[0].array_count = 4;
      desc.fs.source = fs_skybox_source_glsl300es;
      desc.fs.entry = "main";
      desc.fs.images[0].name = "imageSkybox";
      desc.fs.images[0].type = SG_IMAGETYPE_CUBE;
      desc.fs.images[0].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.label = "render3d_skybox_shader";
    };
    return &desc;
  }
  return 0;
}
