cmake_minimum_required(VERSION 3.19)
project(ekx)

option(EKX_BUILD_DEV_TOOLS "Build dev tools" OFF)
option(EKX_BUILD_TESTS "Build tests" OFF)
option(EKX_BUILD_EXTERNAL_TESTS "Build external modules tests" OFF)
option(EKX_BUILD_COVERAGE "Collect coverage info during test run" OFF)
option(EKX_INCLUDE_PLUGINS "Include plugin projects" ON)
option(EKX_INCLUDE_EXAMPLES "Include example projects" OFF)

if (EKX_BUILD_TESTS OR EKX_BUILD_EXTERNAL_TESTS)
    enable_testing()
    if (EKX_BUILD_COVERAGE)
        set(CODE_COVERAGE ON)
    endif ()
endif ()

include(packages/unit/cmake/code-coverage.cmake)

add_library(${PROJECT_NAME} INTERFACE)
add_library(ekx::${PROJECT_NAME} ALIAS ${PROJECT_NAME})

add_subdirectory(external)

add_subdirectory(packages/unit)
add_subdirectory(packages/std)
add_subdirectory(packages/core)
add_subdirectory(packages/app)
add_subdirectory(packages/sg-file)
add_subdirectory(packages/res)
add_subdirectory(packages/physics-arcade)
add_subdirectory(packages/local-storage)
add_subdirectory(packages/ecs)
add_subdirectory(packages/graphics)
add_subdirectory(packages/texture-loader)
add_subdirectory(packages/audio)
add_subdirectory(packages/auph)
add_subdirectory(packages/scenex)
add_subdirectory(packages/appbox)

if (EKX_BUILD_DEV_TOOLS)
    add_subdirectory(packages/dev-tools)
endif ()

if (EKX_INCLUDE_PLUGINS)
    add_subdirectory(plugins/billing)
    add_subdirectory(plugins/game-services)
    add_subdirectory(plugins/firebase)
    add_subdirectory(plugins/admob)
endif ()

if ((NOT EMSCRIPTEN) AND (NOT (${CMAKE_SYSTEM_NAME} MATCHES "iOS")) AND (NOT (${CMAKE_SYSTEM_NAME} MATCHES "Android")))
    add_subdirectory(tools/bmfont-export)
    add_subdirectory(tools/flash-export)
    add_subdirectory(tools/obj-export)
    add_subdirectory(tools/sprite-packer)
endif ()

if (EKX_INCLUDE_EXAMPLES)
    add_subdirectory(examples/rnd-test)
    add_subdirectory(examples/1-app)
    add_subdirectory(examples/2-drawing)
endif ()

if (EKX_BUILD_COVERAGE)
    coverage_all()
endif ()